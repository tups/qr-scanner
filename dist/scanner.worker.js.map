{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///../node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///../node_modules/@babel/runtime/helpers/createClass.js","webpack:///../node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///../node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///../node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///../src/BitMatrix.ts","webpack:///../src/binarizer/index.ts","webpack:///../src/decoder/decodeData/BitStream.ts","webpack:///../src/decoder/decodeData/index.ts","webpack:///../src/decoder/reedsolomon/GenericGFPoly.ts","webpack:///../src/decoder/reedsolomon/GenericGF.ts","webpack:///../src/decoder/reedsolomon/index.ts","webpack:///../src/decoder/version.ts","webpack:///../src/decoder/decoder.ts","webpack:///../src/extractor/index.ts","webpack:///../src/locator/index.ts","webpack:///../src/index.ts","webpack:///./Decoder1D.js","webpack:///./scanner.worker.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","module","exports","arrayLikeToArray","require","_arrayWithoutHoles","isArray","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_iterableToArray","iter","Symbol","iterator","from","_nonIterableSpread","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_toConsumableArray","_unsupportedIterableToArray","o","minLen","n","toString","call","slice","constructor","name","test","decode","rsDecode","decodeData","availableFormats","TwoOfFiveEncoding","Code128Encoding","A","B","C","value","Code93Encoding","character","Code39Encoding","ExtendedEncoding","CodaBarEncoding","EAN13Encoding","formats","SecureCodabar","Secure2Of5","Image","ScanImage","allTables","FormatPriority","Multiple","Locations","Rotate","data","width","height","rotation","newData","x","y","push","Uint8ClampedArray","BoxFilter","radius","sum","fill","elements","map","e","innerLoopLength","dataLength","output","elementsLength","newVal","tempLength","val","shift","Scale","r","g","b","IntensityGradient","max","Number","MIN_VALUE","min","MAX_VALUE","horizontalDiff","verticalDiff","Math","abs","diff","greyScale","otsu","histogram","total","sumB","wB","wF","mB","mF","between","threshold1","threshold2","histogramLength","pow","CreateImageData","Converter","table","ShuffleTable","imageLengthX4","tempArray","j","CreateTable","Promise","resolve","reject","CreateScanTable","scanImageDataLength","scanImageDataX4","EnlargeTable","h","w","TempArray","ScaleHeight","scale","avrgRed","avrgGreen","avrgBlue","k","Intersects","rectOne","rectTwo","maxLocalization","maxPos","originalMax","rects","startX","startY","minY","maxY","minX","maxX","newRect","ImgProcessing","avrgLight","round","hist","thresh","feedBack","postMessage","result","success","newTable","yStraighten","img","start","end","average","threshold","newImg","CheckEan13","values","middle","avrg","BinaryConfiguration","binaryString","type","binTemp","count","totalBars","splice","secureCount","temp","binTempWhite","TwoOfFiveStartEnd","maximum","TwoOfFiveMax","u","CheckInterleaved","pos","Distribution","totalBinArray","testData","maxLength","blackMax","whiteMax","wideAvrg","narrowAvrg","prevPos","wideValues","indexOf","BinArray","counter","tempBin","upperTolerance","lowerTolerance","isFinite","correction","modMem","narrow","checking","hitIndex","CheckCode128","string","checksum","join","summarizer","startChar","Decode2Of5","DecodeCodaBar","DecodeEAN13","leftSide","trigger","rightSide","decodeFormat","L","G","resultArray","R","weight","CheckCode93","checkOne","checkTwo","failSafe","checkSum","firstCheck","firstBool","secondCheck","secondBool","CheckCode39","DecodeCode39","resultString","special","specialchar","DecodeCode93","DecodeCode128","set","symbol","Code128Format","format","BinaryString","tempString","corrections","container","splitImageLength","imageWidthX4","SlicedArray","subarray","slicedArrayLength","binaryHolder","FormatPriorityLength","first","second","Main","allResults","tempObj","tempData","z","scaled","variationData","incrmt","eanStatistics","eanOrder","Selection","Format","Value","bBox","points","pointTemp","minPoints","POSITIVE_INFINITY","point","inversionAttempts","grayscaleWeights","red","green","blue","useIntegerApproximation","self","onmessage","event","setGrayscaleWeights","setInversionMode","close","rgbaData","worker","resultTemp","jsQR","greyScaleWeights","decodeFormats","scan","scanWidth","scanHeight","postOrientation","multiple","all","then","FinalResult","id","inversionMode","Error"],"mappings":"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","file":"scanner.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","export class BitMatrix {\n  public static createEmpty(width: number, height: number) {\n    return new BitMatrix(new Uint8ClampedArray(width * height), width);\n  }\n\n  public width: number;\n  public height: number;\n  private data: Uint8ClampedArray;\n\n  constructor(data: Uint8ClampedArray, width: number) {\n    this.width = width;\n    this.height = data.length / width;\n    this.data = data;\n  }\n\n  public get(x: number, y: number): boolean {\n    if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n      return false;\n    }\n    return !!this.data[y * this.width + x];\n  }\n\n  public set(x: number, y: number, v: boolean) {\n    this.data[y * this.width + x] = v ? 1 : 0;\n  }\n\n  public setRegion(left: number, top: number, width: number, height: number, v: boolean) {\n    for (let y = top; y < top + height; y++) {\n      for (let x = left; x < left + width; x++) {\n        this.set(x, y, !!v);\n      }\n    }\n  }\n}\n","import {BitMatrix} from \"../BitMatrix\";\nimport {GreyscaleWeights} from \"../index\";\n\nconst REGION_SIZE = 8;\nconst MIN_DYNAMIC_RANGE = 24;\n\nfunction numBetween(value: number, min: number, max: number): number {\n  return value < min ? min : value > max ? max : value;\n}\n\n// Like BitMatrix but accepts arbitry Uint8 values\nclass Matrix {\n  private data: Uint8ClampedArray;\n  private width: number;\n  constructor(width: number, height: number, buffer?: Uint8ClampedArray) {\n    this.width = width;\n    const bufferSize = width * height;\n    if (buffer && buffer.length !== bufferSize) {\n      throw new Error(\"Wrong buffer size\");\n    }\n    this.data = buffer || new Uint8ClampedArray(bufferSize);\n  }\n  public get(x: number, y: number) {\n    return this.data[y * this.width + x];\n  }\n  public set(x: number, y: number, value: number) {\n    this.data[y * this.width + x] = value;\n  }\n}\n\nexport function binarize(data: Uint8ClampedArray, width: number, height: number, returnInverted: boolean,\n                         greyscaleWeights: GreyscaleWeights, canOverwriteImage: boolean) {\n  const pixelCount = width * height;\n  if (data.length !== pixelCount * 4) {\n    throw new Error(\"Malformed data passed to binarizer.\");\n  }\n  // assign the greyscale and binary image within the rgba buffer as the rgba image will not be needed after conversion\n  let bufferOffset = 0;\n  // Convert image to greyscale\n  let greyscaleBuffer: Uint8ClampedArray;\n  if (canOverwriteImage) {\n    greyscaleBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, pixelCount);\n    bufferOffset += pixelCount;\n  }\n  const greyscalePixels = new Matrix(width, height, greyscaleBuffer);\n  if (greyscaleWeights.useIntegerApproximation) {\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const pixelPosition = (y * width + x) * 4;\n        const r = data[pixelPosition];\n        const g = data[pixelPosition + 1];\n        const b = data[pixelPosition + 2];\n        greyscalePixels.set(x, y,\n          // tslint:disable-next-line no-bitwise\n          (greyscaleWeights.red * r + greyscaleWeights.green * g + greyscaleWeights.blue * b + 128) >> 8);\n      }\n    }\n  } else {\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const pixelPosition = (y * width + x) * 4;\n        const r = data[pixelPosition];\n        const g = data[pixelPosition + 1];\n        const b = data[pixelPosition + 2];\n        greyscalePixels.set(x, y,\n          greyscaleWeights.red * r + greyscaleWeights.green * g + greyscaleWeights.blue * b);\n      }\n    }\n  }\n  const horizontalRegionCount = Math.ceil(width / REGION_SIZE);\n  const verticalRegionCount = Math.ceil(height / REGION_SIZE);\n  const blackPointsCount = horizontalRegionCount * verticalRegionCount;\n\n  let blackPointsBuffer: Uint8ClampedArray;\n  if (canOverwriteImage) {\n    blackPointsBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, blackPointsCount);\n    bufferOffset += blackPointsCount;\n  }\n  const blackPoints = new Matrix(horizontalRegionCount, verticalRegionCount, blackPointsBuffer);\n  for (let verticalRegion = 0; verticalRegion < verticalRegionCount; verticalRegion++) {\n    for (let hortizontalRegion = 0; hortizontalRegion < horizontalRegionCount; hortizontalRegion++) {\n      let min = Infinity;\n      let max = 0;\n      for (let y = 0; y < REGION_SIZE; y++) {\n        for (let x = 0; x < REGION_SIZE; x++) {\n          const pixelLumosity =\n            greyscalePixels.get(hortizontalRegion * REGION_SIZE + x, verticalRegion * REGION_SIZE + y);\n          min = Math.min(min, pixelLumosity);\n          max = Math.max(max, pixelLumosity);\n        }\n      }\n      // We could also compute the real average of all pixels but following the assumption that the qr code consists\n      // of bright and dark pixels and essentially not much in between, by (min + max)/2 we make the cut really between\n      // those two classes. If using the average over all pixel in a block of mostly bright pixels and few dark pixels,\n      // the avg would tend to the bright side and darker bright pixels could be interpreted as dark.\n      let average = (min + max) / 2;\n      // Small bias towards black by moving the threshold up. We do this, as in the finder patterns white holes tend\n      // to appear which makes them undetectable.\n      const blackBias = 1.1;\n      average = Math.min(255, average * blackBias);\n      if (max - min <= MIN_DYNAMIC_RANGE) {\n        // If variation within the block is low, assume this is a block with only light or only\n        // dark pixels. In that case we do not want to use the average, as it would divide this\n        // low contrast area into black and white pixels, essentially creating data out of noise.\n        //\n        // Default the blackpoint for these blocks to be half the min - effectively white them out\n        average = min / 2;\n\n        if (verticalRegion > 0 && hortizontalRegion > 0) {\n          // Correct the \"white background\" assumption for blocks that have neighbors by comparing\n          // the pixels in this block to the previously calculated black points. This is based on\n          // the fact that dark barcode symbology is always surrounded by some amount of light\n          // background for which reasonable black point estimates were made. The bp estimated at\n          // the boundaries is used for the interior.\n\n          // The (min < bp) is arbitrary but works better than other heuristics that were tried.\n          const averageNeighborBlackPoint = (\n            blackPoints.get(hortizontalRegion, verticalRegion - 1) +\n            (2 * blackPoints.get(hortizontalRegion - 1, verticalRegion)) +\n            blackPoints.get(hortizontalRegion - 1, verticalRegion - 1)\n          ) / 4;\n          if (min < averageNeighborBlackPoint) {\n            average = averageNeighborBlackPoint; // no need to apply black bias as already applied to neighbors\n          }\n        }\n      }\n      blackPoints.set(hortizontalRegion, verticalRegion, average);\n    }\n  }\n\n  let binarized: BitMatrix;\n  if (canOverwriteImage) {\n    const binarizedBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, pixelCount);\n    bufferOffset += pixelCount;\n    binarized = new BitMatrix(binarizedBuffer, width);\n  } else {\n    binarized = BitMatrix.createEmpty(width, height);\n  }\n\n  let inverted: BitMatrix = null;\n  if (returnInverted) {\n    if (canOverwriteImage) {\n      const invertedBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, pixelCount);\n      inverted = new BitMatrix(invertedBuffer, width);\n    } else {\n      inverted = BitMatrix.createEmpty(width, height);\n    }\n  }\n\n  for (let verticalRegion = 0; verticalRegion < verticalRegionCount; verticalRegion++) {\n    for (let hortizontalRegion = 0; hortizontalRegion < horizontalRegionCount; hortizontalRegion++) {\n      const left = numBetween(hortizontalRegion, 2, horizontalRegionCount - 3);\n      const top = numBetween(verticalRegion, 2, verticalRegionCount - 3);\n      let sum = 0;\n      for (let xRegion = -2; xRegion <= 2; xRegion++) {\n        for (let yRegion = -2; yRegion <= 2; yRegion++) {\n          sum += blackPoints.get(left + xRegion, top + yRegion);\n        }\n      }\n      const threshold = sum / 25;\n      for (let xRegion = 0; xRegion < REGION_SIZE; xRegion++) {\n        for (let yRegion = 0; yRegion < REGION_SIZE; yRegion++) {\n          const x = hortizontalRegion * REGION_SIZE + xRegion;\n          const y = verticalRegion * REGION_SIZE + yRegion;\n          const lum = greyscalePixels.get(x, y);\n          binarized.set(x, y, lum <= threshold);\n          if (returnInverted) {\n            inverted.set(x, y, !(lum <= threshold));\n          }\n        }\n      }\n    }\n  }\n  if (returnInverted) {\n    return { binarized, inverted };\n  }\n  return { binarized };\n}\n","// tslint:disable:no-bitwise\n\nexport class BitStream {\n  private bytes: Uint8ClampedArray;\n  private byteOffset: number = 0;\n  private bitOffset: number = 0;\n\n  constructor(bytes: Uint8ClampedArray) {\n    this.bytes = bytes;\n  }\n\n  public readBits(numBits: number): number {\n    if (numBits < 1 || numBits > 32 || numBits > this.available()) {\n      throw new Error(\"Cannot read \" + numBits.toString() + \" bits\");\n    }\n\n    let result = 0;\n    // First, read remainder from current byte\n    if (this.bitOffset > 0) {\n      const bitsLeft = 8 - this.bitOffset;\n      const toRead = numBits < bitsLeft ? numBits : bitsLeft;\n      const bitsToNotRead = bitsLeft - toRead;\n      const mask = (0xFF >> (8 - toRead)) << bitsToNotRead;\n      result = (this.bytes[this.byteOffset] & mask) >> bitsToNotRead;\n      numBits -= toRead;\n      this.bitOffset += toRead;\n      if (this.bitOffset === 8) {\n        this.bitOffset = 0;\n        this.byteOffset++;\n      }\n    }\n\n    // Next read whole bytes\n    if (numBits > 0) {\n      while (numBits >= 8) {\n        result = (result << 8) | (this.bytes[this.byteOffset] & 0xFF);\n        this.byteOffset++;\n        numBits -= 8;\n      }\n\n      // Finally read a partial byte\n      if (numBits > 0) {\n        const bitsToNotRead = 8 - numBits;\n        const mask = (0xFF >> bitsToNotRead) << bitsToNotRead;\n        result = (result << numBits) | ((this.bytes[this.byteOffset] & mask) >> bitsToNotRead);\n        this.bitOffset += numBits;\n      }\n    }\n    return result;\n  }\n\n  public available(): number {\n    return 8 * (this.bytes.length - this.byteOffset) - this.bitOffset;\n  }\n}\n","// tslint:disable:no-bitwise\nimport { BitStream } from \"./BitStream\";\n\nexport interface Chunk {\n  type: Mode;\n  text: string;\n}\n\nexport interface ByteChunk {\n  type: Mode.Byte | Mode.Kanji;\n  bytes: number[];\n}\n\nexport interface ECIChunk {\n  type: Mode.ECI;\n  assignmentNumber: number;\n}\n\nexport type Chunks = Array<Chunk | ByteChunk | ECIChunk>;\n\nexport interface DecodedQR {\n  text: string;\n  bytes: number[];\n  chunks: Chunks;\n}\n\nexport enum Mode {\n  Numeric = \"numeric\",\n  Alphanumeric = \"alphanumeric\",\n  Byte = \"byte\",\n  Kanji = \"kanji\",\n  ECI = \"eci\",\n}\n\nenum ModeByte {\n  Terminator = 0x0,\n  Numeric = 0x1,\n  Alphanumeric = 0x2,\n  Byte = 0x4,\n  Kanji = 0x8,\n  ECI = 0x7,\n  // StructuredAppend = 0x3,\n  // FNC1FirstPosition = 0x5,\n  // FNC1SecondPosition = 0x9,\n}\n\nfunction decodeNumeric(stream: BitStream, size: number) {\n  const bytes: number[] = [];\n  let text = \"\";\n\n  const characterCountSize = [10, 12, 14][size];\n  let length = stream.readBits(characterCountSize);\n  // Read digits in groups of 3\n  while (length >= 3) {\n    const num = stream.readBits(10);\n    if (num >= 1000) {\n      throw new Error(\"Invalid numeric value above 999\");\n    }\n\n    const a = Math.floor(num / 100);\n    const b = Math.floor(num / 10) % 10;\n    const c = num % 10;\n\n    bytes.push(48 + a, 48 + b, 48 + c);\n    text += a.toString() + b.toString() + c.toString();\n    length -= 3;\n  }\n\n  // If the number of digits aren't a multiple of 3, the remaining digits are special cased.\n  if (length === 2) {\n    const num = stream.readBits(7);\n    if (num >= 100) {\n      throw new Error(\"Invalid numeric value above 99\");\n    }\n\n    const a = Math.floor(num / 10);\n    const b = num % 10;\n\n    bytes.push(48 + a, 48 + b);\n    text += a.toString() + b.toString();\n  } else if (length === 1) {\n    const num = stream.readBits(4);\n    if (num >= 10) {\n      throw new Error(\"Invalid numeric value above 9\");\n    }\n\n    bytes.push(48 + num);\n    text += num.toString();\n  }\n\n  return { bytes, text };\n}\n\nconst AlphanumericCharacterCodes = [\n  \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\",\n  \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\",\n  \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\",\n  \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\n  \" \", \"$\", \"%\", \"*\", \"+\", \"-\", \".\", \"/\", \":\",\n];\n\nfunction decodeAlphanumeric(stream: BitStream, size: number) {\n  const bytes: number[] = [];\n  let text = \"\";\n\n  const characterCountSize = [9, 11, 13][size];\n  let length = stream.readBits(characterCountSize);\n  while (length >= 2) {\n    const v = stream.readBits(11);\n\n    const a = Math.floor(v / 45);\n    const b = v % 45;\n\n    bytes.push(AlphanumericCharacterCodes[a].charCodeAt(0), AlphanumericCharacterCodes[b].charCodeAt(0));\n    text += AlphanumericCharacterCodes[a] + AlphanumericCharacterCodes[b];\n    length -= 2;\n  }\n\n  if (length === 1) {\n    const a = stream.readBits(6);\n    bytes.push(AlphanumericCharacterCodes[a].charCodeAt(0));\n    text += AlphanumericCharacterCodes[a];\n  }\n\n  return { bytes, text };\n}\n\nfunction decodeByte(stream: BitStream, size: number) {\n  const bytes: number[] = [];\n  let text = \"\";\n\n  const characterCountSize = [8, 16, 16][size];\n  const length = stream.readBits(characterCountSize);\n  for (let i = 0; i < length; i++) {\n    const b = stream.readBits(8);\n    bytes.push(b);\n  }\n  try {\n    text += decodeURIComponent(bytes.map(b => `%${(\"0\" + b.toString(16)).substr(-2)}`).join(\"\"));\n  } catch {\n    // failed to decode\n  }\n\n  return { bytes, text };\n}\n\nfunction decodeKanji(stream: BitStream, size: number) {\n  const bytes: number[] = [];\n\n  const characterCountSize = [8, 10, 12][size];\n  const length = stream.readBits(characterCountSize);\n  for (let i = 0; i < length; i++) {\n    const k = stream.readBits(13);\n\n    let c = (Math.floor(k / 0xC0) << 8) | (k % 0xC0);\n    if (c < 0x1F00) {\n      c += 0x8140;\n    } else {\n      c += 0xC140;\n    }\n\n    bytes.push(c >> 8, c & 0xFF);\n  }\n\n  const text = new TextDecoder(\"shift-jis\").decode(Uint8Array.from(bytes));\n  return { bytes, text };\n}\n\nexport function decode(data: Uint8ClampedArray, version: number): DecodedQR {\n  const stream = new BitStream(data);\n\n  // There are 3 'sizes' based on the version. 1-9 is small (0), 10-26 is medium (1) and 27-40 is large (2).\n  const size = version <= 9 ? 0 : version <= 26 ? 1 : 2;\n\n  const result: DecodedQR = {\n    text: \"\",\n    bytes: [],\n    chunks: [],\n  };\n\n  while (stream.available() >= 4) {\n    const mode = stream.readBits(4);\n    if (mode === ModeByte.Terminator) {\n      return result;\n    } else if (mode === ModeByte.ECI) {\n      if (stream.readBits(1) === 0) {\n        result.chunks.push({\n          type: Mode.ECI,\n          assignmentNumber: stream.readBits(7),\n        });\n      } else if (stream.readBits(1) === 0) {\n        result.chunks.push({\n          type: Mode.ECI,\n          assignmentNumber: stream.readBits(14),\n        });\n      } else if (stream.readBits(1) === 0) {\n        result.chunks.push({\n          type: Mode.ECI,\n          assignmentNumber: stream.readBits(21),\n        });\n      } else {\n        // ECI data seems corrupted\n        result.chunks.push({\n          type: Mode.ECI,\n          assignmentNumber: -1,\n        });\n      }\n    } else if (mode === ModeByte.Numeric) {\n      const numericResult = decodeNumeric(stream, size);\n      result.text += numericResult.text;\n      result.bytes.push(...numericResult.bytes);\n      result.chunks.push({\n        type: Mode.Numeric,\n        text: numericResult.text,\n      });\n    } else if (mode === ModeByte.Alphanumeric) {\n      const alphanumericResult = decodeAlphanumeric(stream, size);\n      result.text += alphanumericResult.text;\n      result.bytes.push(...alphanumericResult.bytes);\n      result.chunks.push({\n        type: Mode.Alphanumeric,\n        text: alphanumericResult.text,\n      });\n    } else if (mode === ModeByte.Byte) {\n      const byteResult = decodeByte(stream, size);\n      result.text += byteResult.text;\n      result.bytes.push(...byteResult.bytes);\n      result.chunks.push({\n        type: Mode.Byte,\n        bytes: byteResult.bytes,\n        text: byteResult.text,\n      });\n    } else if (mode === ModeByte.Kanji) {\n      const kanjiResult = decodeKanji(stream, size);\n      result.text += kanjiResult.text;\n      result.bytes.push(...kanjiResult.bytes);\n      result.chunks.push({\n        type: Mode.Kanji,\n        bytes: kanjiResult.bytes,\n        text: kanjiResult.text,\n      });\n    }\n  }\n\n  // If there is no data left, or the remaining bits are all 0, then that counts as a termination marker\n  if (stream.available() === 0 || stream.readBits(stream.available()) === 0) {\n    return result;\n  }\n}\n","import GenericGF, { addOrSubtractGF } from \"./GenericGF\";\n\nexport default class GenericGFPoly {\n  private field: GenericGF;\n  private coefficients: Uint8ClampedArray;\n\n  constructor(field: GenericGF, coefficients: Uint8ClampedArray) {\n    if (coefficients.length === 0) {\n      throw new Error(\"No coefficients.\");\n    }\n    this.field = field;\n    const coefficientsLength = coefficients.length;\n    if (coefficientsLength > 1 && coefficients[0] === 0) {\n      // Leading term must be non-zero for anything except the constant polynomial \"0\"\n      let firstNonZero = 1;\n      while (firstNonZero < coefficientsLength && coefficients[firstNonZero] === 0) {\n        firstNonZero++;\n      }\n      if (firstNonZero === coefficientsLength) {\n        this.coefficients = field.zero.coefficients;\n      } else {\n        this.coefficients = new Uint8ClampedArray(coefficientsLength - firstNonZero);\n        for (let i = 0; i < this.coefficients.length; i++) {\n          this.coefficients[i] = coefficients[firstNonZero + i];\n        }\n      }\n    } else {\n      this.coefficients = coefficients;\n    }\n  }\n\n  public degree() {\n    return this.coefficients.length - 1;\n  }\n\n  public isZero() {\n    return this.coefficients[0] === 0;\n  }\n\n  public getCoefficient(degree: number) {\n    return this.coefficients[this.coefficients.length - 1 - degree];\n  }\n\n  public addOrSubtract(other: GenericGFPoly) {\n    if (this.isZero()) {\n      return other;\n    }\n    if (other.isZero()) {\n      return this;\n    }\n\n    let smallerCoefficients = this.coefficients;\n    let largerCoefficients = other.coefficients;\n    if (smallerCoefficients.length > largerCoefficients.length) {\n      [smallerCoefficients, largerCoefficients] = [largerCoefficients, smallerCoefficients];\n    }\n    const sumDiff = new Uint8ClampedArray(largerCoefficients.length);\n    const lengthDiff = largerCoefficients.length - smallerCoefficients.length;\n    for (let i = 0; i < lengthDiff; i++) {\n      sumDiff[i] = largerCoefficients[i];\n    }\n\n    for (let i = lengthDiff; i < largerCoefficients.length; i++) {\n      sumDiff[i] = addOrSubtractGF(smallerCoefficients[i - lengthDiff], largerCoefficients[i]);\n    }\n\n    return new GenericGFPoly(this.field, sumDiff);\n  }\n\n  public multiply(scalar: number) {\n    if (scalar === 0) {\n      return this.field.zero;\n    }\n    if (scalar === 1) {\n      return this;\n    }\n    const size = this.coefficients.length;\n    const product = new Uint8ClampedArray(size);\n    for (let i = 0; i < size; i++) {\n      product[i] = this.field.multiply(this.coefficients[i], scalar);\n    }\n\n    return new GenericGFPoly(this.field, product);\n  }\n\n  public multiplyPoly(other: GenericGFPoly): GenericGFPoly {\n    if (this.isZero() || other.isZero()) {\n      return this.field.zero;\n    }\n    const aCoefficients = this.coefficients;\n    const aLength = aCoefficients.length;\n    const bCoefficients = other.coefficients;\n    const bLength = bCoefficients.length;\n    const product = new Uint8ClampedArray(aLength + bLength - 1);\n    for (let i = 0; i < aLength; i++) {\n      const aCoeff = aCoefficients[i];\n      for (let j = 0; j < bLength; j++) {\n        product[i + j] = addOrSubtractGF(product[i + j],\n          this.field.multiply(aCoeff, bCoefficients[j]));\n      }\n    }\n    return new GenericGFPoly(this.field, product);\n  }\n\n  public multiplyByMonomial(degree: number, coefficient: number) {\n    if (degree < 0) {\n      throw new Error(\"Invalid degree less than 0\");\n    }\n    if (coefficient === 0) {\n      return this.field.zero;\n    }\n    const size = this.coefficients.length;\n    const product = new Uint8ClampedArray(size + degree);\n    for (let i = 0; i < size; i++) {\n      product[i] = this.field.multiply(this.coefficients[i], coefficient);\n    }\n    return new GenericGFPoly(this.field, product);\n  }\n\n  public evaluateAt(a: number) {\n    let result = 0;\n    if (a === 0) {\n      // Just return the x^0 coefficient\n      return this.getCoefficient(0);\n    }\n    const size = this.coefficients.length;\n    if (a === 1) {\n      // Just the sum of the coefficients\n      this.coefficients.forEach((coefficient) => {\n        result = addOrSubtractGF(result, coefficient);\n      });\n      return result;\n    }\n    result = this.coefficients[0];\n    for (let i = 1; i < size; i++) {\n      result = addOrSubtractGF(this.field.multiply(a, result), this.coefficients[i]);\n    }\n    return result;\n  }\n}\n","import GenericGFPoly from \"./GenericGFPoly\";\n\nexport function addOrSubtractGF(a: number, b: number) {\n  return a ^ b; // tslint:disable-line:no-bitwise\n}\n\nexport default class GenericGF {\n  public primitive: number;\n  public size: number;\n  public generatorBase: number;\n  public zero: GenericGFPoly;\n  public one: GenericGFPoly;\n\n  private expTable: number[];\n  private logTable: number[];\n\n  constructor(primitive: number, size: number, genBase: number) {\n    this.primitive = primitive;\n    this.size = size;\n    this.generatorBase = genBase;\n    this.expTable = new Array(this.size);\n    this.logTable = new Array(this.size);\n\n    let x = 1;\n    for (let i = 0; i < this.size; i++) {\n      this.expTable[i] = x;\n      x = x * 2;\n      if (x >= this.size) {\n        x = (x ^ this.primitive) & (this.size - 1); // tslint:disable-line:no-bitwise\n      }\n    }\n\n    for (let i = 0; i < this.size - 1; i++) {\n      this.logTable[this.expTable[i]] = i;\n    }\n    this.zero = new GenericGFPoly(this, Uint8ClampedArray.from([0]));\n    this.one = new GenericGFPoly(this, Uint8ClampedArray.from([1]));\n  }\n\n  public multiply(a: number, b: number) {\n    if (a === 0 || b === 0) {\n      return 0;\n    }\n    return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.size - 1)];\n  }\n\n  public inverse(a: number) {\n    if (a === 0) {\n      throw new Error(\"Can't invert 0\");\n    }\n    return this.expTable[this.size - this.logTable[a] - 1];\n  }\n\n  public buildMonomial(degree: number, coefficient: number): GenericGFPoly {\n    if (degree < 0) {\n      throw new Error(\"Invalid monomial degree less than 0\");\n    }\n    if (coefficient === 0) {\n      return this.zero;\n    }\n    const coefficients = new Uint8ClampedArray(degree + 1);\n    coefficients[0] = coefficient;\n    return new GenericGFPoly(this, coefficients);\n  }\n\n  public log(a: number) {\n    if (a === 0) {\n      throw new Error(\"Can't take log(0)\");\n    }\n    return this.logTable[a];\n  }\n\n  public exp(a: number) {\n    return this.expTable[a];\n  }\n}\n","import GenericGF, { addOrSubtractGF } from \"./GenericGF\";\nimport GenericGFPoly from \"./GenericGFPoly\";\n\nfunction runEuclideanAlgorithm(field: GenericGF, a: GenericGFPoly, b: GenericGFPoly, R: number): GenericGFPoly[] {\n  // Assume a's degree is >= b's\n  if (a.degree() < b.degree()) {\n    [a, b] = [b, a];\n  }\n\n  let rLast = a;\n  let r = b;\n  let tLast = field.zero;\n  let t = field.one;\n\n  // Run Euclidean algorithm until r's degree is less than R/2\n  while (r.degree() >= R / 2) {\n    const rLastLast = rLast;\n    const tLastLast = tLast;\n    rLast = r;\n    tLast = t;\n\n    // Divide rLastLast by rLast, with quotient in q and remainder in r\n    if (rLast.isZero()) {\n      // Euclidean algorithm already terminated?\n      return null;\n    }\n    r = rLastLast;\n    let q = field.zero;\n    const denominatorLeadingTerm = rLast.getCoefficient(rLast.degree());\n    const dltInverse = field.inverse(denominatorLeadingTerm);\n    while (r.degree() >= rLast.degree() && !r.isZero()) {\n      const degreeDiff = r.degree() - rLast.degree();\n      const scale = field.multiply(r.getCoefficient(r.degree()), dltInverse);\n      q = q.addOrSubtract(field.buildMonomial(degreeDiff, scale));\n      r = r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff, scale));\n    }\n\n    t = q.multiplyPoly(tLast).addOrSubtract(tLastLast);\n\n    if (r.degree() >= rLast.degree()) {\n      return null;\n    }\n  }\n\n  const sigmaTildeAtZero = t.getCoefficient(0);\n  if (sigmaTildeAtZero === 0) {\n    return null;\n  }\n\n  const inverse = field.inverse(sigmaTildeAtZero);\n  return [t.multiply(inverse), r.multiply(inverse)];\n}\n\nfunction findErrorLocations(field: GenericGF, errorLocator: GenericGFPoly): number[] {\n  // This is a direct application of Chien's search\n  const numErrors = errorLocator.degree();\n  if (numErrors === 1) {\n    return [errorLocator.getCoefficient(1)];\n  }\n  const result: number[] = new Array(numErrors);\n  let errorCount = 0;\n  for (let i = 1; i < field.size && errorCount < numErrors; i++) {\n    if (errorLocator.evaluateAt(i) === 0) {\n      result[errorCount] = field.inverse(i);\n      errorCount++;\n    }\n  }\n  if (errorCount !== numErrors) {\n    return null;\n  }\n  return result;\n}\n\nfunction findErrorMagnitudes(field: GenericGF, errorEvaluator: GenericGFPoly, errorLocations: number[]): number[] {\n  // This is directly applying Forney's Formula\n  const s = errorLocations.length;\n  const result: number[] = new Array(s);\n  for (let i = 0; i < s; i++) {\n    const xiInverse = field.inverse(errorLocations[i]);\n    let denominator = 1;\n    for (let j = 0; j < s; j++) {\n      if (i !== j) {\n        denominator = field.multiply(denominator, addOrSubtractGF(1, field.multiply(errorLocations[j], xiInverse)));\n      }\n    }\n    result[i] = field.multiply(errorEvaluator.evaluateAt(xiInverse), field.inverse(denominator));\n    if (field.generatorBase !== 0) {\n      result[i] = field.multiply(result[i], xiInverse);\n    }\n  }\n  return result;\n}\n\nexport function decode(bytes: number[], twoS: number) {\n  const outputBytes = new Uint8ClampedArray(bytes.length);\n  outputBytes.set(bytes);\n\n  const field = new GenericGF(0x011D, 256, 0); // x^8 + x^4 + x^3 + x^2 + 1\n  const poly = new GenericGFPoly(field, outputBytes);\n\n  const syndromeCoefficients = new Uint8ClampedArray(twoS);\n  let error = false;\n  for (let s = 0; s < twoS; s++) {\n    const evaluation = poly.evaluateAt(field.exp(s + field.generatorBase));\n    syndromeCoefficients[syndromeCoefficients.length - 1 - s] = evaluation;\n    if (evaluation !== 0) {\n      error = true;\n    }\n  }\n  if (!error) {\n    return outputBytes;\n  }\n\n  const syndrome = new GenericGFPoly(field, syndromeCoefficients);\n\n  const sigmaOmega = runEuclideanAlgorithm(field, field.buildMonomial(twoS, 1), syndrome, twoS);\n  if (sigmaOmega === null) {\n    return null;\n  }\n\n  const errorLocations = findErrorLocations(field, sigmaOmega[0]);\n  if (errorLocations == null) {\n    return null;\n  }\n\n  const errorMagnitudes = findErrorMagnitudes(field, sigmaOmega[1], errorLocations);\n  for (let i = 0; i < errorLocations.length; i++) {\n    const position = outputBytes.length - 1 - field.log(errorLocations[i]);\n    if (position < 0) {\n      return null;\n    }\n    outputBytes[position] = addOrSubtractGF(outputBytes[position], errorMagnitudes[i]);\n  }\n\n  return outputBytes;\n}\n","export interface Version {\n  infoBits: number;\n  versionNumber: number;\n  alignmentPatternCenters: number[];\n  errorCorrectionLevels: Array<{\n    ecCodewordsPerBlock: number;\n    ecBlocks: Array<{\n      numBlocks: number;\n      dataCodewordsPerBlock: number;\n    }>\n  }>;\n}\n\nexport const VERSIONS: Version[] = [\n  {\n    infoBits: null,\n    versionNumber: 1,\n    alignmentPatternCenters: [],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 7,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 19 }],\n      },\n      {\n        ecCodewordsPerBlock: 10,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 16 }],\n      },\n      {\n        ecCodewordsPerBlock: 13,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 13 }],\n      },\n      {\n        ecCodewordsPerBlock: 17,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 9 }],\n      },\n    ],\n  },\n  {\n    infoBits: null,\n    versionNumber: 2,\n    alignmentPatternCenters: [6, 18],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 10,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 34 }],\n      },\n      {\n        ecCodewordsPerBlock: 16,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 28 }],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 22 }],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 16 }],\n      },\n    ],\n  },\n  {\n    infoBits: null,\n    versionNumber: 3,\n    alignmentPatternCenters: [6, 22],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 15,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 55 }],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 44 }],\n      },\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 17 }],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 13 }],\n      },\n    ],\n  },\n  {\n    infoBits: null,\n    versionNumber: 4,\n    alignmentPatternCenters: [6, 26],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 80 }],\n      },\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 32 }],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 24 }],\n      },\n      {\n        ecCodewordsPerBlock: 16,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 9 }],\n      },\n    ],\n  },\n  {\n    infoBits: null,\n    versionNumber: 5,\n    alignmentPatternCenters: [6, 30],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 108 }],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 43 }],\n      },\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 15 },\n          { numBlocks: 2, dataCodewordsPerBlock: 16 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 11 },\n          { numBlocks: 2, dataCodewordsPerBlock: 12 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: null,\n    versionNumber: 6,\n    alignmentPatternCenters: [6, 34],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 68 }],\n      },\n      {\n        ecCodewordsPerBlock: 16,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 27 }],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 19 }],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 15 }],\n      },\n    ],\n  },\n  {\n    infoBits: 0x07C94,\n    versionNumber: 7,\n    alignmentPatternCenters: [6, 22, 38],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 78 }],\n      },\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 31 }],\n      },\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 14 },\n          { numBlocks: 4, dataCodewordsPerBlock: 15 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 13 },\n          { numBlocks: 1, dataCodewordsPerBlock: 14 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x085BC,\n    versionNumber: 8,\n    alignmentPatternCenters: [6, 24, 42],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 97 }],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 38 },\n          { numBlocks: 2, dataCodewordsPerBlock: 39 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 18 },\n          { numBlocks: 2, dataCodewordsPerBlock: 19 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 14 },\n          { numBlocks: 2, dataCodewordsPerBlock: 15 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x09A99,\n    versionNumber: 9,\n    alignmentPatternCenters: [6, 26, 46],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 116 }],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 36 },\n          { numBlocks: 2, dataCodewordsPerBlock: 37 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 16 },\n          { numBlocks: 4, dataCodewordsPerBlock: 17 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 12 },\n          { numBlocks: 4, dataCodewordsPerBlock: 13 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x0A4D3,\n    versionNumber: 10,\n    alignmentPatternCenters: [6, 28, 50],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 68 },\n          { numBlocks: 2, dataCodewordsPerBlock: 69 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 43 },\n          { numBlocks: 1, dataCodewordsPerBlock: 44 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 19 },\n          { numBlocks: 2, dataCodewordsPerBlock: 20 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 15 },\n          { numBlocks: 2, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x0BBF6,\n    versionNumber: 11,\n    alignmentPatternCenters: [6, 30, 54],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 81 }],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 1, dataCodewordsPerBlock: 50 },\n          { numBlocks: 4, dataCodewordsPerBlock: 51 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 22 },\n          { numBlocks: 4, dataCodewordsPerBlock: 23 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 12 },\n          { numBlocks: 8, dataCodewordsPerBlock: 13 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x0C762,\n    versionNumber: 12,\n    alignmentPatternCenters: [6, 32, 58],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 92 },\n          { numBlocks: 2, dataCodewordsPerBlock: 93 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 36 },\n          { numBlocks: 2, dataCodewordsPerBlock: 37 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 20 },\n          { numBlocks: 6, dataCodewordsPerBlock: 21 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 7, dataCodewordsPerBlock: 14 },\n          { numBlocks: 4, dataCodewordsPerBlock: 15 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x0D847,\n    versionNumber: 13,\n    alignmentPatternCenters: [6, 34, 62],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 107 }],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 8, dataCodewordsPerBlock: 37 },\n          { numBlocks: 1, dataCodewordsPerBlock: 38 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 8, dataCodewordsPerBlock: 20 },\n          { numBlocks: 4, dataCodewordsPerBlock: 21 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 12, dataCodewordsPerBlock: 11 },\n          { numBlocks: 4, dataCodewordsPerBlock: 12 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x0E60D,\n    versionNumber: 14,\n    alignmentPatternCenters: [6, 26, 46, 66],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 115 },\n          { numBlocks: 1, dataCodewordsPerBlock: 116 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 40 },\n          { numBlocks: 5, dataCodewordsPerBlock: 41 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 16 },\n          { numBlocks: 5, dataCodewordsPerBlock: 17 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 12 },\n          { numBlocks: 5, dataCodewordsPerBlock: 13 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x0F928,\n    versionNumber: 15,\n    alignmentPatternCenters: [6, 26, 48, 70],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 5, dataCodewordsPerBlock: 87 },\n          { numBlocks: 1, dataCodewordsPerBlock: 88 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 5, dataCodewordsPerBlock: 41 },\n          { numBlocks: 5, dataCodewordsPerBlock: 42 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 5, dataCodewordsPerBlock: 24 },\n          { numBlocks: 7, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 12 },\n          { numBlocks: 7, dataCodewordsPerBlock: 13 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x10B78,\n    versionNumber: 16,\n    alignmentPatternCenters: [6, 26, 50, 74],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 5, dataCodewordsPerBlock: 98 },\n          { numBlocks: 1, dataCodewordsPerBlock: 99 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 7, dataCodewordsPerBlock: 45 },\n          { numBlocks: 3, dataCodewordsPerBlock: 46 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 15, dataCodewordsPerBlock: 19 },\n          { numBlocks: 2, dataCodewordsPerBlock: 20 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 15 },\n          { numBlocks: 13, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1145D,\n    versionNumber: 17,\n    alignmentPatternCenters: [6, 30, 54, 78],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 1, dataCodewordsPerBlock: 107 },\n          { numBlocks: 5, dataCodewordsPerBlock: 108 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 10, dataCodewordsPerBlock: 46 },\n          { numBlocks: 1, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 1, dataCodewordsPerBlock: 22 },\n          { numBlocks: 15, dataCodewordsPerBlock: 23 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 14 },\n          { numBlocks: 17, dataCodewordsPerBlock: 15 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x12A17,\n    versionNumber: 18,\n    alignmentPatternCenters: [6, 30, 56, 82],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 5, dataCodewordsPerBlock: 120 },\n          { numBlocks: 1, dataCodewordsPerBlock: 121 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 9, dataCodewordsPerBlock: 43 },\n          { numBlocks: 4, dataCodewordsPerBlock: 44 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 17, dataCodewordsPerBlock: 22 },\n          { numBlocks: 1, dataCodewordsPerBlock: 23 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 14 },\n          { numBlocks: 19, dataCodewordsPerBlock: 15 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x13532,\n    versionNumber: 19,\n    alignmentPatternCenters: [6, 30, 58, 86],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 113 },\n          { numBlocks: 4, dataCodewordsPerBlock: 114 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 44 },\n          { numBlocks: 11, dataCodewordsPerBlock: 45 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 17, dataCodewordsPerBlock: 21 },\n          { numBlocks: 4, dataCodewordsPerBlock: 22 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 9, dataCodewordsPerBlock: 13 },\n          { numBlocks: 16, dataCodewordsPerBlock: 14 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x149A6,\n    versionNumber: 20,\n    alignmentPatternCenters: [6, 34, 62, 90],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 107 },\n          { numBlocks: 5, dataCodewordsPerBlock: 108 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 41 },\n          { numBlocks: 13, dataCodewordsPerBlock: 42 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 15, dataCodewordsPerBlock: 24 },\n          { numBlocks: 5, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 15, dataCodewordsPerBlock: 15 },\n          { numBlocks: 10, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x15683,\n    versionNumber: 21,\n    alignmentPatternCenters: [6, 28, 50, 72, 94],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 116 },\n          { numBlocks: 4, dataCodewordsPerBlock: 117 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 42 }],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 17, dataCodewordsPerBlock: 22 },\n          { numBlocks: 6, dataCodewordsPerBlock: 23 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 19, dataCodewordsPerBlock: 16 },\n          { numBlocks: 6, dataCodewordsPerBlock: 17 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x168C9,\n    versionNumber: 22,\n    alignmentPatternCenters: [6, 26, 50, 74, 98],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 111 },\n          { numBlocks: 7, dataCodewordsPerBlock: 112 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 46 }],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 7, dataCodewordsPerBlock: 24 },\n          { numBlocks: 16, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{ numBlocks: 34, dataCodewordsPerBlock: 13 }],\n      },\n    ],\n  },\n  {\n    infoBits: 0x177EC,\n    versionNumber: 23,\n    alignmentPatternCenters: [6, 30, 54, 74, 102],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 121 },\n          { numBlocks: 5, dataCodewordsPerBlock: 122 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 47 },\n          { numBlocks: 14, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 24 },\n          { numBlocks: 14, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 16, dataCodewordsPerBlock: 15 },\n          { numBlocks: 14, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x18EC4,\n    versionNumber: 24,\n    alignmentPatternCenters: [6, 28, 54, 80, 106],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 117 },\n          { numBlocks: 4, dataCodewordsPerBlock: 118 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 45 },\n          { numBlocks: 14, dataCodewordsPerBlock: 46 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 24 },\n          { numBlocks: 16, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 30, dataCodewordsPerBlock: 16 },\n          { numBlocks: 2, dataCodewordsPerBlock: 17 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x191E1,\n    versionNumber: 25,\n    alignmentPatternCenters: [6, 32, 58, 84, 110],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 8, dataCodewordsPerBlock: 106 },\n          { numBlocks: 4, dataCodewordsPerBlock: 107 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 8, dataCodewordsPerBlock: 47 },\n          { numBlocks: 13, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 7, dataCodewordsPerBlock: 24 },\n          { numBlocks: 22, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 22, dataCodewordsPerBlock: 15 },\n          { numBlocks: 13, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1AFAB,\n    versionNumber: 26,\n    alignmentPatternCenters: [6, 30, 58, 86, 114],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 10, dataCodewordsPerBlock: 114 },\n          { numBlocks: 2, dataCodewordsPerBlock: 115 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 19, dataCodewordsPerBlock: 46 },\n          { numBlocks: 4, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 28, dataCodewordsPerBlock: 22 },\n          { numBlocks: 6, dataCodewordsPerBlock: 23 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 33, dataCodewordsPerBlock: 16 },\n          { numBlocks: 4, dataCodewordsPerBlock: 17 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1B08E,\n    versionNumber: 27,\n    alignmentPatternCenters: [6, 34, 62, 90, 118],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 8, dataCodewordsPerBlock: 122 },\n          { numBlocks: 4, dataCodewordsPerBlock: 123 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 22, dataCodewordsPerBlock: 45 },\n          { numBlocks: 3, dataCodewordsPerBlock: 46 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 8, dataCodewordsPerBlock: 23 },\n          { numBlocks: 26, dataCodewordsPerBlock: 24 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 12, dataCodewordsPerBlock: 15 },\n          { numBlocks: 28, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1CC1A,\n    versionNumber: 28,\n    alignmentPatternCenters: [6, 26, 50, 74, 98, 122],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 117 },\n          { numBlocks: 10, dataCodewordsPerBlock: 118 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 45 },\n          { numBlocks: 23, dataCodewordsPerBlock: 46 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 24 },\n          { numBlocks: 31, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 15 },\n          { numBlocks: 31, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1D33F,\n    versionNumber: 29,\n    alignmentPatternCenters: [6, 30, 54, 78, 102, 126],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 7, dataCodewordsPerBlock: 116 },\n          { numBlocks: 7, dataCodewordsPerBlock: 117 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 21, dataCodewordsPerBlock: 45 },\n          { numBlocks: 7, dataCodewordsPerBlock: 46 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 1, dataCodewordsPerBlock: 23 },\n          { numBlocks: 37, dataCodewordsPerBlock: 24 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 19, dataCodewordsPerBlock: 15 },\n          { numBlocks: 26, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1ED75,\n    versionNumber: 30,\n    alignmentPatternCenters: [6, 26, 52, 78, 104, 130],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 5, dataCodewordsPerBlock: 115 },\n          { numBlocks: 10, dataCodewordsPerBlock: 116 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 19, dataCodewordsPerBlock: 47 },\n          { numBlocks: 10, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 15, dataCodewordsPerBlock: 24 },\n          { numBlocks: 25, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 23, dataCodewordsPerBlock: 15 },\n          { numBlocks: 25, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1F250,\n    versionNumber: 31,\n    alignmentPatternCenters: [6, 30, 56, 82, 108, 134],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 13, dataCodewordsPerBlock: 115 },\n          { numBlocks: 3, dataCodewordsPerBlock: 116 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 46 },\n          { numBlocks: 29, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 42, dataCodewordsPerBlock: 24 },\n          { numBlocks: 1, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 23, dataCodewordsPerBlock: 15 },\n          { numBlocks: 28, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x209D5,\n    versionNumber: 32,\n    alignmentPatternCenters: [6, 34, 60, 86, 112, 138],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 115 }],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 10, dataCodewordsPerBlock: 46 },\n          { numBlocks: 23, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 10, dataCodewordsPerBlock: 24 },\n          { numBlocks: 35, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 19, dataCodewordsPerBlock: 15 },\n          { numBlocks: 35, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x216F0,\n    versionNumber: 33,\n    alignmentPatternCenters: [6, 30, 58, 86, 114, 142],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 17, dataCodewordsPerBlock: 115 },\n          { numBlocks: 1, dataCodewordsPerBlock: 116 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 14, dataCodewordsPerBlock: 46 },\n          { numBlocks: 21, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 29, dataCodewordsPerBlock: 24 },\n          { numBlocks: 19, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 15 },\n          { numBlocks: 46, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x228BA,\n    versionNumber: 34,\n    alignmentPatternCenters: [6, 34, 62, 90, 118, 146],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 13, dataCodewordsPerBlock: 115 },\n          { numBlocks: 6, dataCodewordsPerBlock: 116 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 14, dataCodewordsPerBlock: 46 },\n          { numBlocks: 23, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 44, dataCodewordsPerBlock: 24 },\n          { numBlocks: 7, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 59, dataCodewordsPerBlock: 16 },\n          { numBlocks: 1, dataCodewordsPerBlock: 17 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x2379F,\n    versionNumber: 35,\n    alignmentPatternCenters: [6, 30, 54, 78, 102, 126, 150],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 12, dataCodewordsPerBlock: 121 },\n          { numBlocks: 7, dataCodewordsPerBlock: 122 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 12, dataCodewordsPerBlock: 47 },\n          { numBlocks: 26, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 39, dataCodewordsPerBlock: 24 },\n          { numBlocks: 14, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 22, dataCodewordsPerBlock: 15 },\n          { numBlocks: 41, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x24B0B,\n    versionNumber: 36,\n    alignmentPatternCenters: [ 6, 24, 50, 76, 102, 128, 154 ],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 121 },\n          { numBlocks: 14, dataCodewordsPerBlock: 122 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 47 },\n          { numBlocks: 34, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 46, dataCodewordsPerBlock: 24 },\n          { numBlocks: 10, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 15 },\n          { numBlocks: 64, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x2542E,\n    versionNumber: 37,\n    alignmentPatternCenters: [ 6, 28, 54, 80, 106, 132, 158 ],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 17, dataCodewordsPerBlock: 122 },\n          { numBlocks: 4, dataCodewordsPerBlock: 123 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 29, dataCodewordsPerBlock: 46 },\n          { numBlocks: 14, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 49, dataCodewordsPerBlock: 24 },\n          { numBlocks: 10, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 24, dataCodewordsPerBlock: 15 },\n          { numBlocks: 46, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x26A64,\n    versionNumber: 38,\n    alignmentPatternCenters: [ 6, 32, 58, 84, 110, 136, 162 ],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 122 },\n          { numBlocks: 18, dataCodewordsPerBlock: 123 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 13, dataCodewordsPerBlock: 46 },\n          { numBlocks: 32, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 48, dataCodewordsPerBlock: 24 },\n          { numBlocks: 14, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 42, dataCodewordsPerBlock: 15 },\n          { numBlocks: 32, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x27541,\n    versionNumber: 39,\n    alignmentPatternCenters: [ 6, 26, 54, 82, 110, 138, 166 ],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 20, dataCodewordsPerBlock: 117 },\n          { numBlocks: 4, dataCodewordsPerBlock: 118 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 40, dataCodewordsPerBlock: 47 },\n          { numBlocks: 7, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 43, dataCodewordsPerBlock: 24 },\n          { numBlocks: 22, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 10, dataCodewordsPerBlock: 15 },\n          { numBlocks: 67, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x28C69,\n    versionNumber: 40,\n    alignmentPatternCenters: [ 6, 30, 58, 86, 114, 142, 170 ],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 19, dataCodewordsPerBlock: 118 },\n          { numBlocks: 6, dataCodewordsPerBlock: 119 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 18, dataCodewordsPerBlock: 47 },\n          { numBlocks: 31, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 34, dataCodewordsPerBlock: 24 },\n          { numBlocks: 34, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 20, dataCodewordsPerBlock: 15 },\n          { numBlocks: 61, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n];\n","import { BitMatrix } from \"../BitMatrix\";\nimport { Point } from \"../Point\";\nimport { decode as decodeData, DecodedQR } from \"./decodeData\";\nimport { decode as rsDecode } from \"./reedsolomon\";\nimport { Version, VERSIONS } from \"./version\";\n\n// tslint:disable:no-bitwise\nfunction numBitsDiffering(x: number, y: number) {\n  let z = x ^ y;\n  let bitCount = 0;\n  while (z) {\n    bitCount++;\n    z &= z - 1;\n  }\n  return bitCount;\n}\n\nfunction pushBit(bit: any, byte: number) {\n  return (byte << 1) | bit;\n}\n// tslint:enable:no-bitwise\n\nconst FORMAT_INFO_TABLE = [\n  { bits: 0x5412, formatInfo: { errorCorrectionLevel: 1, dataMask: 0 } },\n  { bits: 0x5125, formatInfo: { errorCorrectionLevel: 1, dataMask: 1 } },\n  { bits: 0x5E7C, formatInfo: { errorCorrectionLevel: 1, dataMask: 2 } },\n  { bits: 0x5B4B, formatInfo: { errorCorrectionLevel: 1, dataMask: 3 } },\n  { bits: 0x45F9, formatInfo: { errorCorrectionLevel: 1, dataMask: 4 } },\n  { bits: 0x40CE, formatInfo: { errorCorrectionLevel: 1, dataMask: 5 } },\n  { bits: 0x4F97, formatInfo: { errorCorrectionLevel: 1, dataMask: 6 } },\n  { bits: 0x4AA0, formatInfo: { errorCorrectionLevel: 1, dataMask: 7 } },\n  { bits: 0x77C4, formatInfo: { errorCorrectionLevel: 0, dataMask: 0 } },\n  { bits: 0x72F3, formatInfo: { errorCorrectionLevel: 0, dataMask: 1 } },\n  { bits: 0x7DAA, formatInfo: { errorCorrectionLevel: 0, dataMask: 2 } },\n  { bits: 0x789D, formatInfo: { errorCorrectionLevel: 0, dataMask: 3 } },\n  { bits: 0x662F, formatInfo: { errorCorrectionLevel: 0, dataMask: 4 } },\n  { bits: 0x6318, formatInfo: { errorCorrectionLevel: 0, dataMask: 5 } },\n  { bits: 0x6C41, formatInfo: { errorCorrectionLevel: 0, dataMask: 6 } },\n  { bits: 0x6976, formatInfo: { errorCorrectionLevel: 0, dataMask: 7 } },\n  { bits: 0x1689, formatInfo: { errorCorrectionLevel: 3, dataMask: 0 } },\n  { bits: 0x13BE, formatInfo: { errorCorrectionLevel: 3, dataMask: 1 } },\n  { bits: 0x1CE7, formatInfo: { errorCorrectionLevel: 3, dataMask: 2 } },\n  { bits: 0x19D0, formatInfo: { errorCorrectionLevel: 3, dataMask: 3 } },\n  { bits: 0x0762, formatInfo: { errorCorrectionLevel: 3, dataMask: 4 } },\n  { bits: 0x0255, formatInfo: { errorCorrectionLevel: 3, dataMask: 5 } },\n  { bits: 0x0D0C, formatInfo: { errorCorrectionLevel: 3, dataMask: 6 } },\n  { bits: 0x083B, formatInfo: { errorCorrectionLevel: 3, dataMask: 7 } },\n  { bits: 0x355F, formatInfo: { errorCorrectionLevel: 2, dataMask: 0 } },\n  { bits: 0x3068, formatInfo: { errorCorrectionLevel: 2, dataMask: 1 } },\n  { bits: 0x3F31, formatInfo: { errorCorrectionLevel: 2, dataMask: 2 } },\n  { bits: 0x3A06, formatInfo: { errorCorrectionLevel: 2, dataMask: 3 } },\n  { bits: 0x24B4, formatInfo: { errorCorrectionLevel: 2, dataMask: 4 } },\n  { bits: 0x2183, formatInfo: { errorCorrectionLevel: 2, dataMask: 5 } },\n  { bits: 0x2EDA, formatInfo: { errorCorrectionLevel: 2, dataMask: 6 } },\n  { bits: 0x2BED, formatInfo: { errorCorrectionLevel: 2, dataMask: 7 } },\n];\n\nconst DATA_MASKS = [\n  (p: Point) => ((p.y + p.x) % 2) === 0,\n  (p: Point) => (p.y % 2) === 0,\n  (p: Point) => p.x % 3 === 0,\n  (p: Point) => (p.y + p.x) % 3 === 0,\n  (p: Point) => (Math.floor(p.y / 2) + Math.floor(p.x / 3)) % 2 === 0,\n  (p: Point) => ((p.x * p.y) % 2) + ((p.x * p.y) % 3) === 0,\n  (p: Point) => ((((p.y * p.x) % 2) + (p.y * p.x) % 3) % 2) === 0,\n  (p: Point) => ((((p.y + p.x) % 2) + (p.y * p.x) % 3) % 2) === 0,\n];\n\ninterface FormatInformation {\n  errorCorrectionLevel: number;\n  dataMask: number;\n}\n\nfunction buildFunctionPatternMask(version: Version): BitMatrix {\n  const dimension = 17 + 4 * version.versionNumber;\n  const matrix = BitMatrix.createEmpty(dimension, dimension);\n\n  matrix.setRegion(0, 0, 9, 9, true); // Top left finder pattern + separator + format\n  matrix.setRegion(dimension - 8, 0, 8, 9, true); // Top right finder pattern + separator + format\n  matrix.setRegion(0, dimension - 8, 9, 8, true); // Bottom left finder pattern + separator + format\n\n  // Alignment patterns\n  for (const x of version.alignmentPatternCenters) {\n    for (const y of version.alignmentPatternCenters) {\n      if (!(x === 6 && y === 6 || x === 6 && y === dimension - 7 || x === dimension - 7 && y === 6)) {\n        matrix.setRegion(x - 2, y - 2, 5, 5, true);\n      }\n    }\n  }\n\n  matrix.setRegion(6, 9, 1, dimension - 17, true); // Vertical timing pattern\n  matrix.setRegion(9, 6, dimension - 17, 1, true); // Horizontal timing pattern\n\n  if (version.versionNumber > 6) {\n    matrix.setRegion(dimension - 11, 0, 3, 6, true); // Version info, top right\n    matrix.setRegion(0, dimension - 11, 6, 3, true); // Version info, bottom left\n  }\n\n  return matrix;\n}\n\nfunction readCodewords(matrix: BitMatrix, version: Version, formatInfo: FormatInformation) {\n  const dataMask = DATA_MASKS[formatInfo.dataMask];\n  const dimension = matrix.height;\n\n  const functionPatternMask = buildFunctionPatternMask(version);\n\n  const codewords: number[] = [];\n  let currentByte = 0;\n  let bitsRead = 0;\n\n  // Read columns in pairs, from right to left\n  let readingUp = true;\n  for (let columnIndex = dimension - 1; columnIndex > 0; columnIndex -= 2) {\n    if (columnIndex === 6) { // Skip whole column with vertical alignment pattern;\n      columnIndex--;\n    }\n    for (let i = 0; i < dimension; i++) {\n      const y = readingUp ? dimension - 1 - i : i;\n      for (let columnOffset = 0; columnOffset < 2; columnOffset++) {\n        const x = columnIndex - columnOffset;\n        if (!functionPatternMask.get(x, y)) {\n          bitsRead++;\n          let bit = matrix.get(x, y);\n          if (dataMask({y, x})) {\n            bit = !bit;\n          }\n          currentByte = pushBit(bit, currentByte);\n          if (bitsRead === 8) { // Whole bytes\n            codewords.push(currentByte);\n            bitsRead = 0;\n            currentByte = 0;\n          }\n        }\n      }\n    }\n    readingUp = !readingUp;\n  }\n  return codewords;\n}\n\nfunction readVersion(matrix: BitMatrix): Version {\n  const dimension = matrix.height;\n\n  const provisionalVersion = Math.floor((dimension - 17) / 4);\n  if (provisionalVersion <= 6) { // 6 and under dont have version info in the QR code\n    return VERSIONS[provisionalVersion - 1];\n  }\n\n  let topRightVersionBits = 0;\n  for (let y = 5; y >= 0; y--) {\n    for (let x = dimension - 9; x >= dimension - 11; x--) {\n      topRightVersionBits = pushBit(matrix.get(x, y), topRightVersionBits);\n    }\n  }\n\n  let bottomLeftVersionBits = 0;\n  for (let x = 5; x >= 0; x--) {\n    for (let y = dimension - 9; y >= dimension - 11; y--) {\n      bottomLeftVersionBits = pushBit(matrix.get(x, y), bottomLeftVersionBits);\n    }\n  }\n\n  let bestDifference = Infinity;\n  let bestVersion: Version;\n  for (const version of VERSIONS) {\n    if (version.infoBits === topRightVersionBits || version.infoBits === bottomLeftVersionBits) {\n      return version;\n    }\n\n    let difference = numBitsDiffering(topRightVersionBits, version.infoBits);\n    if (difference < bestDifference) {\n      bestVersion = version;\n      bestDifference = difference;\n    }\n\n    difference = numBitsDiffering(bottomLeftVersionBits, version.infoBits);\n    if (difference < bestDifference) {\n      bestVersion = version;\n      bestDifference = difference;\n    }\n  }\n  // We can tolerate up to 3 bits of error since no two version info codewords will\n  // differ in less than 8 bits.\n  if (bestDifference <= 3) {\n    return bestVersion;\n  }\n}\n\nfunction readFormatInformation(matrix: BitMatrix) {\n  let topLeftFormatInfoBits = 0;\n  for (let x = 0; x <= 8; x++) {\n    if (x !== 6) { // Skip timing pattern bit\n      topLeftFormatInfoBits = pushBit(matrix.get(x, 8), topLeftFormatInfoBits);\n    }\n  }\n  for (let y = 7; y >= 0; y--) {\n    if (y !== 6) { // Skip timing pattern bit\n      topLeftFormatInfoBits = pushBit(matrix.get(8, y), topLeftFormatInfoBits);\n    }\n  }\n\n  const dimension = matrix.height;\n  let topRightBottomRightFormatInfoBits = 0;\n  for (let y = dimension - 1; y >= dimension - 7; y--) { // bottom left\n    topRightBottomRightFormatInfoBits = pushBit(matrix.get(8, y), topRightBottomRightFormatInfoBits);\n  }\n  for (let x = dimension - 8; x < dimension; x++) { // top right\n    topRightBottomRightFormatInfoBits = pushBit(matrix.get(x, 8), topRightBottomRightFormatInfoBits);\n  }\n\n  let bestDifference = Infinity;\n  let bestFormatInfo = null;\n  for (const {bits, formatInfo} of FORMAT_INFO_TABLE) {\n    if (bits === topLeftFormatInfoBits || bits === topRightBottomRightFormatInfoBits) {\n      return formatInfo;\n    }\n    let difference = numBitsDiffering(topLeftFormatInfoBits, bits);\n    if (difference < bestDifference) {\n      bestFormatInfo = formatInfo;\n      bestDifference = difference;\n    }\n    if (topLeftFormatInfoBits !== topRightBottomRightFormatInfoBits) { // also try the other option\n      difference = numBitsDiffering(topRightBottomRightFormatInfoBits, bits);\n      if (difference < bestDifference) {\n        bestFormatInfo = formatInfo;\n        bestDifference = difference;\n      }\n    }\n  }\n  // Hamming distance of the 32 masked codes is 7, by construction, so <= 3 bits differing means we found a match\n  if (bestDifference <= 3) {\n    return bestFormatInfo;\n  }\n  return null;\n}\n\nfunction getDataBlocks(codewords: number[], version: Version, ecLevel: number) {\n  const ecInfo = version.errorCorrectionLevels[ecLevel];\n  const dataBlocks: Array<{\n    numDataCodewords: number;\n    codewords: number[];\n  }> = [];\n\n  let totalCodewords = 0;\n  ecInfo.ecBlocks.forEach(block => {\n    for (let i = 0; i < block.numBlocks; i++) {\n      dataBlocks.push({ numDataCodewords: block.dataCodewordsPerBlock, codewords: [] });\n      totalCodewords += block.dataCodewordsPerBlock + ecInfo.ecCodewordsPerBlock;\n    }\n  });\n\n  // In some cases the QR code will be malformed enough that we pull off more or less than we should.\n  // If we pull off less there's nothing we can do.\n  // If we pull off more we can safely truncate\n  if (codewords.length < totalCodewords) {\n    return null;\n  }\n  codewords = codewords.slice(0, totalCodewords);\n\n  const shortBlockSize = ecInfo.ecBlocks[0].dataCodewordsPerBlock;\n  // Pull codewords to fill the blocks up to the minimum size\n  for (let i = 0; i < shortBlockSize; i++) {\n    for (const dataBlock of dataBlocks) {\n      dataBlock.codewords.push(codewords.shift());\n    }\n  }\n\n  // If there are any large blocks, pull codewords to fill the last element of those\n  if (ecInfo.ecBlocks.length > 1) {\n    const smallBlockCount = ecInfo.ecBlocks[0].numBlocks;\n    const largeBlockCount = ecInfo.ecBlocks[1].numBlocks;\n    for (let i = 0; i < largeBlockCount; i++) {\n      dataBlocks[smallBlockCount + i].codewords.push(codewords.shift());\n    }\n  }\n\n  // Add the rest of the codewords to the blocks. These are the error correction codewords.\n  while (codewords.length > 0) {\n    for (const dataBlock of dataBlocks) {\n      dataBlock.codewords.push(codewords.shift());\n    }\n  }\n\n  return dataBlocks;\n}\n\nfunction decodeMatrix(matrix: BitMatrix) {\n  const version = readVersion(matrix);\n  if (!version) {\n    return null;\n  }\n\n  const formatInfo = readFormatInformation(matrix);\n  if (!formatInfo) {\n    return null;\n  }\n\n  const codewords = readCodewords(matrix, version, formatInfo);\n  const dataBlocks = getDataBlocks(codewords, version, formatInfo.errorCorrectionLevel);\n  if (!dataBlocks) {\n    return null;\n  }\n\n  // Count total number of data bytes\n  const totalBytes = dataBlocks.reduce((a, b) => a + b.numDataCodewords, 0);\n  const resultBytes = new Uint8ClampedArray(totalBytes);\n\n  let resultIndex = 0;\n  for (const dataBlock of dataBlocks) {\n    const correctedBytes = rsDecode(dataBlock.codewords, dataBlock.codewords.length - dataBlock.numDataCodewords);\n    if (!correctedBytes) {\n      return null;\n    }\n    for (let i = 0; i < dataBlock.numDataCodewords; i++) {\n      resultBytes[resultIndex++] = correctedBytes[i];\n    }\n  }\n\n  try {\n    return decodeData(resultBytes, version.versionNumber);\n  } catch {\n    return null;\n  }\n}\n\nexport function decode(matrix: BitMatrix): DecodedQR {\n  if (matrix == null) {\n    return null;\n  }\n  const result = decodeMatrix(matrix);\n  if (result) {\n    return result;\n  }\n  // Decoding didn't work, try mirroring the QR across the topLeft -> bottomRight line.\n  for (let x = 0; x < matrix.width; x++) {\n    for (let y = x + 1; y < matrix.height; y++) {\n      if (matrix.get(x, y) !== matrix.get(y, x)) {\n        matrix.set(x, y, !matrix.get(x, y));\n        matrix.set(y, x, !matrix.get(y, x));\n      }\n    }\n  }\n  return decodeMatrix(matrix);\n}\n","import {BitMatrix} from \"../BitMatrix\";\nimport {Point, QRLocation} from \"../locator\";\n\ninterface PerspectiveTransform {\n  a11: number;\n  a21: number;\n  a31: number;\n  a12: number;\n  a22: number;\n  a32: number;\n  a13: number;\n  a23: number;\n  a33: number;\n}\n\nfunction squareToQuadrilateral(p1: Point, p2: Point, p3: Point, p4: Point): PerspectiveTransform {\n  const dx3 = p1.x - p2.x + p3.x - p4.x;\n  const dy3 = p1.y - p2.y + p3.y - p4.y;\n  if (dx3 === 0 && dy3 === 0) { // Affine\n    return {\n      a11: p2.x - p1.x,\n      a12: p2.y - p1.y,\n      a13: 0,\n      a21: p3.x - p2.x,\n      a22: p3.y - p2.y,\n      a23: 0,\n      a31: p1.x,\n      a32: p1.y,\n      a33: 1,\n    };\n  } else {\n    const dx1 = p2.x - p3.x;\n    const dx2 = p4.x - p3.x;\n    const dy1 = p2.y - p3.y;\n    const dy2 = p4.y - p3.y;\n    const denominator = dx1 * dy2 - dx2 * dy1;\n    const a13 = (dx3 * dy2 - dx2 * dy3) / denominator;\n    const a23 = (dx1 * dy3 - dx3 * dy1) / denominator;\n    return {\n      a11: p2.x - p1.x + a13 * p2.x,\n      a12: p2.y - p1.y + a13 * p2.y,\n      a13,\n      a21: p4.x - p1.x + a23 * p4.x,\n      a22: p4.y - p1.y + a23 * p4.y,\n      a23,\n      a31: p1.x,\n      a32: p1.y,\n      a33: 1,\n    };\n  }\n}\n\nfunction quadrilateralToSquare(p1: Point, p2: Point, p3: Point, p4: Point): PerspectiveTransform {\n  // Here, the adjoint serves as the inverse:\n  const sToQ = squareToQuadrilateral(p1, p2, p3, p4);\n  return {\n    a11: sToQ.a22 * sToQ.a33 - sToQ.a23 * sToQ.a32,\n    a12: sToQ.a13 * sToQ.a32 - sToQ.a12 * sToQ.a33,\n    a13: sToQ.a12 * sToQ.a23 - sToQ.a13 * sToQ.a22,\n    a21: sToQ.a23 * sToQ.a31 - sToQ.a21 * sToQ.a33,\n    a22: sToQ.a11 * sToQ.a33 - sToQ.a13 * sToQ.a31,\n    a23: sToQ.a13 * sToQ.a21 - sToQ.a11 * sToQ.a23,\n    a31: sToQ.a21 * sToQ.a32 - sToQ.a22 * sToQ.a31,\n    a32: sToQ.a12 * sToQ.a31 - sToQ.a11 * sToQ.a32,\n    a33: sToQ.a11 * sToQ.a22 - sToQ.a12 * sToQ.a21,\n  };\n}\n\nfunction times(a: PerspectiveTransform, b: PerspectiveTransform): PerspectiveTransform {\n  return {\n    a11: a.a11 * b.a11 + a.a21 * b.a12 + a.a31 * b.a13,\n    a12: a.a12 * b.a11 + a.a22 * b.a12 + a.a32 * b.a13,\n    a13: a.a13 * b.a11 + a.a23 * b.a12 + a.a33 * b.a13,\n    a21: a.a11 * b.a21 + a.a21 * b.a22 + a.a31 * b.a23,\n    a22: a.a12 * b.a21 + a.a22 * b.a22 + a.a32 * b.a23,\n    a23: a.a13 * b.a21 + a.a23 * b.a22 + a.a33 * b.a23,\n    a31: a.a11 * b.a31 + a.a21 * b.a32 + a.a31 * b.a33,\n    a32: a.a12 * b.a31 + a.a22 * b.a32 + a.a32 * b.a33,\n    a33: a.a13 * b.a31 + a.a23 * b.a32 + a.a33 * b.a33,\n  };\n}\n\nexport function extract(image: BitMatrix, location: QRLocation) {\n  const qToS = quadrilateralToSquare(\n    {x: 3.5, y: 3.5},\n    {x: location.dimension - 3.5, y: 3.5},\n    {x: location.dimension - 6.5, y: location.dimension - 6.5},\n    {x: 3.5, y: location.dimension - 3.5},\n  );\n  const sToQ = squareToQuadrilateral(location.topLeft, location.topRight, location.alignmentPattern, location.bottomLeft);\n  const transform = times(sToQ, qToS);\n\n  const matrix = BitMatrix.createEmpty(location.dimension, location.dimension);\n  const mappingFunction = (x: number, y: number) => {\n    const denominator = transform.a13 * x + transform.a23 * y + transform.a33;\n    return {\n      x: (transform.a11 * x + transform.a21 * y + transform.a31) / denominator,\n      y: (transform.a12 * x + transform.a22 * y + transform.a32) / denominator,\n    };\n  };\n\n  for (let y = 0; y < location.dimension; y++) {\n    for (let x = 0; x < location.dimension; x++) {\n      const xValue = x + 0.5;\n      const yValue = y + 0.5;\n      const sourcePixel = mappingFunction(xValue, yValue);\n      matrix.set(x, y, image.get(Math.floor(sourcePixel.x), Math.floor(sourcePixel.y)));\n    }\n  }\n\n  return {\n    matrix,\n    mappingFunction,\n  };\n}\n","import { BitMatrix } from \"../BitMatrix\";\n\nconst MAX_FINDERPATTERNS_TO_SEARCH = 4;\nconst MIN_QUAD_RATIO = 0.5;\nconst MAX_QUAD_RATIO = 1.5;\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport interface QRLocation {\n  topRight: Point;\n  bottomLeft: Point;\n  topLeft: Point;\n  alignmentPattern: Point;\n  dimension: number;\n}\n\nconst distance = (a: Point, b: Point) => Math.sqrt((b.x - a.x) ** 2 + (b.y - a.y) ** 2);\n\nfunction sum(values: number[]) {\n  return values.reduce((a, b) => a + b);\n}\n\n// Takes three finder patterns and organizes them into topLeft, topRight, etc\nfunction reorderFinderPatterns(pattern1: Point, pattern2: Point, pattern3: Point) {\n  // Find distances between pattern centers\n  const oneTwoDistance = distance(pattern1, pattern2);\n  const twoThreeDistance = distance(pattern2, pattern3);\n  const oneThreeDistance = distance(pattern1, pattern3);\n\n  let bottomLeft: Point;\n  let topLeft: Point;\n  let topRight: Point;\n\n  // Assume one closest to other two is B; A and C will just be guesses at first\n  if (twoThreeDistance >= oneTwoDistance && twoThreeDistance >= oneThreeDistance) {\n    [bottomLeft, topLeft, topRight] = [pattern2, pattern1, pattern3];\n  } else if (oneThreeDistance >= twoThreeDistance && oneThreeDistance >= oneTwoDistance) {\n    [bottomLeft, topLeft, topRight] = [pattern1, pattern2, pattern3];\n  } else {\n    [bottomLeft, topLeft, topRight] = [pattern1, pattern3, pattern2];\n  }\n\n  // Use cross product to figure out whether bottomLeft (A) and topRight (C) are correct or flipped in relation to topLeft (B)\n  // This asks whether BC x BA has a positive z component, which is the arrangement we want. If it's negative, then\n  // we've got it flipped around and should swap topRight and bottomLeft.\n  if (((topRight.x - topLeft.x) * (bottomLeft.y - topLeft.y)) - ((topRight.y - topLeft.y) * (bottomLeft.x - topLeft.x)) < 0) {\n    [bottomLeft, topRight] = [topRight, bottomLeft];\n  }\n\n  return { bottomLeft, topLeft, topRight };\n}\n\n// Computes the dimension (number of modules on a side) of the QR Code based on the position of the finder patterns\nfunction computeDimension(topLeft: Point, topRight: Point, bottomLeft: Point, matrix: BitMatrix) {\n  const moduleSize = (\n    sum(countBlackWhiteRun(topLeft, bottomLeft, matrix, 5)) / 7 + // Divide by 7 since the ratio is 1:1:3:1:1\n    sum(countBlackWhiteRun(topLeft, topRight, matrix, 5)) / 7 +\n    sum(countBlackWhiteRun(bottomLeft, topLeft, matrix, 5)) / 7 +\n    sum(countBlackWhiteRun(topRight, topLeft, matrix, 5)) / 7\n  ) / 4;\n\n  if (moduleSize < 1) {\n    throw new Error(\"Invalid module size\");\n  }\n\n  const topDimension = Math.round(distance(topLeft, topRight) / moduleSize);\n  const sideDimension = Math.round(distance(topLeft, bottomLeft) / moduleSize);\n  let dimension = Math.floor((topDimension + sideDimension) / 2) + 7;\n  switch (dimension % 4) {\n    case 0:\n      dimension++;\n      break;\n    case 2:\n      dimension--;\n      break;\n  }\n  return { dimension, moduleSize };\n}\n\n// Takes an origin point and an end point and counts the sizes of the black white run from the origin towards the end point.\n// Returns an array of elements, representing the pixel size of the black white run.\n// Uses a variant of http://en.wikipedia.org/wiki/Bresenham's_line_algorithm\nfunction countBlackWhiteRunTowardsPoint(origin: Point, end: Point, matrix: BitMatrix, length: number) {\n  const switchPoints: Point[] = [{x: Math.floor(origin.x), y: Math.floor(origin.y)}];\n  const steep = Math.abs(end.y - origin.y) > Math.abs(end.x - origin.x);\n\n  let fromX: number;\n  let fromY: number;\n  let toX: number;\n  let toY: number;\n  if (steep) {\n    fromX = Math.floor(origin.y);\n    fromY = Math.floor(origin.x);\n    toX = Math.floor(end.y);\n    toY = Math.floor(end.x);\n  } else {\n    fromX = Math.floor(origin.x);\n    fromY = Math.floor(origin.y);\n    toX = Math.floor(end.x);\n    toY = Math.floor(end.y);\n  }\n\n  const dx = Math.abs(toX - fromX);\n  const dy = Math.abs(toY - fromY);\n  let error = Math.floor(-dx / 2);\n  const xStep = fromX < toX ? 1 : -1;\n  const yStep = fromY < toY ? 1 : -1;\n\n  let currentPixel = true;\n  // Loop up until x == toX, but not beyond\n  for (let x = fromX, y = fromY; x !== toX + xStep; x += xStep) {\n    // Does current pixel mean we have moved white to black or vice versa?\n    // Scanning black in state 0,2 and white in state 1, so if we find the wrong\n    // color, advance to next state or end if we are in state 2 already\n    const realX = steep ? y : x;\n    const realY = steep ? x : y;\n    if (matrix.get(realX, realY) !== currentPixel) {\n      currentPixel = !currentPixel;\n      switchPoints.push({x: realX, y: realY});\n      if (switchPoints.length === length + 1) {\n        break;\n      }\n    }\n    error += dy;\n    if (error > 0) {\n      if (y === toY) {\n        break;\n      }\n      y += yStep;\n      error -= dx;\n    }\n  }\n  const distances: number[] = [];\n  for (let i = 0; i < length; i++) {\n    if (switchPoints[i] && switchPoints[i + 1]) {\n      distances.push(distance(switchPoints[i], switchPoints[i + 1]));\n    } else {\n      distances.push(0);\n    }\n  }\n  return distances;\n}\n\n// Takes an origin point and an end point and counts the sizes of the black white run in the origin point\n// along the line that intersects with the end point. Returns an array of elements, representing the pixel sizes\n// of the black white run. Takes a length which represents the number of switches from black to white to look for.\nfunction countBlackWhiteRun(origin: Point, end: Point, matrix: BitMatrix, length: number) {\n  const rise = end.y - origin.y;\n  const run = end.x - origin.x;\n\n  const towardsEnd = countBlackWhiteRunTowardsPoint(origin, end, matrix, Math.ceil(length / 2));\n  const awayFromEnd = countBlackWhiteRunTowardsPoint(origin, {x: origin.x - run, y: origin.y - rise}, matrix, Math.ceil(length / 2));\n\n  const middleValue = towardsEnd.shift() + awayFromEnd.shift() - 1; // Substract one so we don't double count a pixel\n  return awayFromEnd.concat(middleValue).concat(...towardsEnd);\n}\n\n// Takes in a black white run and an array of expected ratios. Returns the average size of the run as well as the \"error\" -\n// that is the amount the run diverges from the expected ratio\nfunction scoreBlackWhiteRun(sequence: number[], ratios: number[]) {\n  const averageSize = sum(sequence) / sum(ratios);\n  let error = 0;\n  ratios.forEach((ratio, i) => {\n    error += (sequence[i] - ratio * averageSize) ** 2;\n  });\n\n  return { averageSize, error };\n}\n\n// Takes an X,Y point and an array of sizes and scores the point against those ratios.\n// For example for a finder pattern takes the ratio list of 1:1:3:1:1 and checks horizontal, vertical and diagonal ratios\n// against that.\nfunction scorePattern(point: Point, ratios: number[], matrix: BitMatrix) {\n  try {\n    const horizontalRun = countBlackWhiteRun(point, {x: -1, y: point.y}, matrix, ratios.length);\n    const verticalRun = countBlackWhiteRun(point, {x: point.x, y: -1}, matrix, ratios.length);\n\n    const topLeftPoint = {\n      x: Math.max(0, point.x - point.y) - 1,\n      y: Math.max(0, point.y - point.x) - 1,\n    };\n    const topLeftBottomRightRun = countBlackWhiteRun(point, topLeftPoint, matrix, ratios.length);\n\n    const bottomLeftPoint = {\n      x: Math.min(matrix.width, point.x + point.y) + 1,\n      y: Math.min(matrix.height, point.y + point.x) + 1,\n    };\n    const bottomLeftTopRightRun = countBlackWhiteRun(point, bottomLeftPoint, matrix, ratios.length);\n\n    const horzError = scoreBlackWhiteRun(horizontalRun, ratios);\n    const vertError = scoreBlackWhiteRun(verticalRun, ratios);\n    const diagDownError = scoreBlackWhiteRun(topLeftBottomRightRun, ratios);\n    const diagUpError = scoreBlackWhiteRun(bottomLeftTopRightRun, ratios);\n\n    const ratioError = Math.sqrt(horzError.error * horzError.error +\n      vertError.error * vertError.error +\n      diagDownError.error * diagDownError.error +\n      diagUpError.error * diagUpError.error);\n\n    const avgSize = (horzError.averageSize + vertError.averageSize + diagDownError.averageSize + diagUpError.averageSize) / 4;\n\n    const sizeError = ((horzError.averageSize - avgSize) ** 2 +\n      (vertError.averageSize - avgSize) ** 2 +\n      (diagDownError.averageSize - avgSize) ** 2 +\n      (diagUpError.averageSize - avgSize) ** 2) / avgSize;\n    return ratioError + sizeError;\n  } catch {\n    return Infinity;\n  }\n}\n\nfunction recenterLocation(matrix: BitMatrix, p: Point): Point {\n  let leftX = Math.round(p.x);\n  while (matrix.get(leftX, Math.round(p.y))) {\n    leftX--;\n  }\n  let rightX = Math.round(p.x);\n  while (matrix.get(rightX, Math.round(p.y))) {\n    rightX++;\n  }\n  const x = (leftX + rightX) / 2;\n\n  let topY = Math.round(p.y);\n  while (matrix.get(Math.round(x), topY)) {\n    topY--;\n  }\n  let bottomY = Math.round(p.y);\n  while (matrix.get(Math.round(x), bottomY)) {\n    bottomY++;\n  }\n  const y = (topY + bottomY) / 2;\n\n  return { x, y };\n}\n\ninterface Quad {\n  top: {\n    startX: number;\n    endX: number;\n    y: number;\n  };\n  bottom: {\n    startX: number;\n    endX: number;\n    y: number;\n  };\n}\n\nexport function locate(matrix: BitMatrix): QRLocation[] {\n  const finderPatternQuads: Quad[] = [];\n  let activeFinderPatternQuads: Quad[] = [];\n  const alignmentPatternQuads: Quad[] = [];\n  let activeAlignmentPatternQuads: Quad[] = [];\n\n  for (let y = 0; y <= matrix.height; y++) {\n    let length = 0;\n    let lastBit = false;\n    let scans = [0, 0, 0, 0, 0];\n\n    for (let x = -1; x <= matrix.width; x++) {\n      const v = matrix.get(x, y);\n      if (v === lastBit) {\n        length++;\n      } else {\n        scans = [scans[1], scans[2], scans[3], scans[4], length];\n        length = 1;\n        lastBit = v;\n\n        // Do the last 5 color changes ~ match the expected ratio for a finder pattern? 1:1:3:1:1 of b:w:b:w:b\n        const averageFinderPatternBlocksize = sum(scans) / 7;\n        const validFinderPattern =\n          Math.abs(scans[0] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n          Math.abs(scans[1] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n          Math.abs(scans[2] - 3 * averageFinderPatternBlocksize) < 3 * averageFinderPatternBlocksize &&\n          Math.abs(scans[3] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n          Math.abs(scans[4] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n          !v; // And make sure the current pixel is white since finder patterns are bordered in white\n\n        // Do the last 3 color changes ~ match the expected ratio for an alignment pattern? 1:1:1 of w:b:w\n        const averageAlignmentPatternBlocksize = sum(scans.slice(-3)) / 3;\n        const validAlignmentPattern =\n          Math.abs(scans[2] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\n          Math.abs(scans[3] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\n          Math.abs(scans[4] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\n          v; // Is the current pixel black since alignment patterns are bordered in black\n\n        if (validFinderPattern) {\n          // Compute the start and end x values of the large center black square\n          const endX = x - scans[3] - scans[4];\n          const startX = endX - scans[2];\n\n          const line = { startX, endX, y };\n          // Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\n          // that line as the starting point.\n          const matchingQuads = activeFinderPatternQuads.filter(q =>\n            (startX >= q.bottom.startX && startX <= q.bottom.endX) ||\n            (endX >= q.bottom.startX && startX <= q.bottom.endX) ||\n            (startX <= q.bottom.startX && endX >= q.bottom.endX && (\n              (scans[2] / (q.bottom.endX - q.bottom.startX)) < MAX_QUAD_RATIO &&\n              (scans[2] / (q.bottom.endX - q.bottom.startX)) > MIN_QUAD_RATIO\n            )),\n          );\n          if (matchingQuads.length > 0) {\n            matchingQuads[0].bottom = line;\n          } else {\n            activeFinderPatternQuads.push({ top: line, bottom: line });\n          }\n        }\n        if (validAlignmentPattern) {\n          // Compute the start and end x values of the center black square\n          const endX = x - scans[4];\n          const startX = endX - scans[3];\n\n          const line = { startX, y, endX };\n          // Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\n          // that line as the starting point.\n          const matchingQuads = activeAlignmentPatternQuads.filter(q =>\n            (startX >= q.bottom.startX && startX <= q.bottom.endX) ||\n            (endX >= q.bottom.startX && startX <= q.bottom.endX) ||\n            (startX <= q.bottom.startX && endX >= q.bottom.endX && (\n              (scans[2] / (q.bottom.endX - q.bottom.startX)) < MAX_QUAD_RATIO &&\n              (scans[2] / (q.bottom.endX - q.bottom.startX)) > MIN_QUAD_RATIO\n            )),\n          );\n          if (matchingQuads.length > 0) {\n            matchingQuads[0].bottom = line;\n          } else {\n            activeAlignmentPatternQuads.push({ top: line, bottom: line });\n          }\n        }\n      }\n    }\n    finderPatternQuads.push(...activeFinderPatternQuads.filter(q => q.bottom.y !== y && q.bottom.y - q.top.y >= 2));\n    activeFinderPatternQuads = activeFinderPatternQuads.filter(q => q.bottom.y === y);\n\n    alignmentPatternQuads.push(...activeAlignmentPatternQuads.filter(q => q.bottom.y !== y));\n    activeAlignmentPatternQuads = activeAlignmentPatternQuads.filter(q => q.bottom.y === y);\n\n  }\n\n  finderPatternQuads.push(...activeFinderPatternQuads.filter(q => q.bottom.y - q.top.y >= 2));\n  alignmentPatternQuads.push(...activeAlignmentPatternQuads);\n\n  const finderPatternGroups = finderPatternQuads\n    .filter(q => q.bottom.y - q.top.y >= 2) // All quads must be at least 2px tall since the center square is larger than a block\n    .map(q => { // Initial scoring of finder pattern quads by looking at their ratios, not taking into account position\n      const x = (q.top.startX + q.top.endX + q.bottom.startX + q.bottom.endX) / 4;\n      const y = (q.top.y + q.bottom.y + 1) / 2;\n      if (!matrix.get(Math.round(x), Math.round(y))) {\n        return;\n      }\n\n      const lengths = [q.top.endX - q.top.startX, q.bottom.endX - q.bottom.startX, q.bottom.y - q.top.y + 1];\n      const size = sum(lengths) / lengths.length;\n      const score = scorePattern({x: Math.round(x), y: Math.round(y)}, [1, 1, 3, 1, 1], matrix);\n      return { score, x, y, size };\n    })\n    .filter(q => !!q) // Filter out any rejected quads from above\n    .sort((a, b) => a.score - b.score)\n    // Now take the top finder pattern options and try to find 2 other options with a similar size.\n    .map((point, i, finderPatterns) => {\n      if (i > MAX_FINDERPATTERNS_TO_SEARCH) {\n        return null;\n      }\n      const otherPoints = finderPatterns\n        .filter((p, ii) => i !== ii)\n        .map(p => ({ x: p.x, y: p.y, score: p.score + ((p.size - point.size) ** 2) / point.size, size: p.size }))\n        .sort((a, b) => a.score - b.score);\n      if (otherPoints.length < 2) {\n        return null;\n      }\n      const score = point.score + otherPoints[0].score + otherPoints[1].score;\n      return {points: [point].concat(otherPoints.slice(0, 2)), score};\n    })\n    .filter(q => !!q) // Filter out any rejected finder patterns from above\n    .sort((a, b) => a.score - b.score);\n\n  if (finderPatternGroups.length === 0) {\n    return null;\n  }\n\n  const { topRight, topLeft, bottomLeft } = reorderFinderPatterns(\n    finderPatternGroups[0].points[0], finderPatternGroups[0].points[1], finderPatternGroups[0].points[2],\n  );\n  const alignment = findAlignmentPattern(matrix, alignmentPatternQuads, topRight, topLeft, bottomLeft);\n  const result: QRLocation[] = [];\n  if (alignment) {\n    result.push({\n      alignmentPattern: { x: alignment.alignmentPattern.x, y: alignment.alignmentPattern.y },\n      bottomLeft: {x: bottomLeft.x, y: bottomLeft.y },\n      dimension: alignment.dimension,\n      topLeft: {x: topLeft.x, y: topLeft.y },\n      topRight: {x: topRight.x, y: topRight.y },\n    });\n  }\n\n  // We normally use the center of the quads as the location of the tracking points, which is optimal for most cases and will account\n  // for a skew in the image. However, In some cases, a slight skew might not be real and instead be caused by image compression\n  // errors and/or low resolution. For those cases, we'd be better off centering the point exactly in the middle of the black area. We\n  // compute and return the location data for the naively centered points as it is little additional work and allows for multiple\n  // attempts at decoding harder images.\n  const midTopRight = recenterLocation(matrix, topRight);\n  const midTopLeft = recenterLocation(matrix, topLeft);\n  const midBottomLeft = recenterLocation(matrix, bottomLeft);\n  const centeredAlignment = findAlignmentPattern(matrix, alignmentPatternQuads, midTopRight, midTopLeft, midBottomLeft);\n  if (centeredAlignment) {\n    result.push({\n      alignmentPattern: { x: centeredAlignment.alignmentPattern.x, y: centeredAlignment.alignmentPattern.y },\n      bottomLeft: { x: midBottomLeft.x, y: midBottomLeft. y },\n      topLeft: { x: midTopLeft.x, y: midTopLeft. y },\n      topRight: { x: midTopRight.x, y: midTopRight. y },\n      dimension: centeredAlignment.dimension,\n    });\n  }\n\n  if (result.length === 0) {\n    return null;\n  }\n\n  return result;\n}\n\nfunction findAlignmentPattern(matrix: BitMatrix, alignmentPatternQuads: Quad[], topRight: Point, topLeft: Point, bottomLeft: Point) {\n  // Now that we've found the three finder patterns we can determine the blockSize and the size of the QR code.\n  // We'll use these to help find the alignment pattern but also later when we do the extraction.\n  let dimension: number;\n  let moduleSize: number;\n  try {\n    ({ dimension, moduleSize } = computeDimension(topLeft, topRight, bottomLeft, matrix));\n  } catch (e) {\n    return null;\n  }\n\n  // Now find the alignment pattern\n  const bottomRightFinderPattern = { // Best guess at where a bottomRight finder pattern would be\n    x: topRight.x - topLeft.x + bottomLeft.x,\n    y: topRight.y - topLeft.y + bottomLeft.y,\n  };\n  const modulesBetweenFinderPatterns = ((distance(topLeft, bottomLeft) + distance(topLeft, topRight)) / 2 / moduleSize);\n  const correctionToTopLeft = 1 - (3 / modulesBetweenFinderPatterns);\n  const expectedAlignmentPattern = {\n    x: topLeft.x + correctionToTopLeft * (bottomRightFinderPattern.x - topLeft.x),\n    y: topLeft.y + correctionToTopLeft * (bottomRightFinderPattern.y - topLeft.y),\n  };\n\n  const alignmentPatterns = alignmentPatternQuads\n    .map(q => {\n      const x = (q.top.startX + q.top.endX + q.bottom.startX + q.bottom.endX) / 4;\n      const y = (q.top.y + q.bottom.y + 1) / 2;\n      if (!matrix.get(Math.floor(x), Math.floor(y))) {\n        return;\n      }\n\n      const lengths = [q.top.endX - q.top.startX, q.bottom.endX - q.bottom.startX, (q.bottom.y - q.top.y + 1)];\n      const size = sum(lengths) / lengths.length;\n      const sizeScore = scorePattern({x: Math.floor(x), y: Math.floor(y)}, [1, 1, 1], matrix);\n      const score = sizeScore + distance({x, y}, expectedAlignmentPattern);\n      return { x, y, score };\n    })\n    .filter(v => !!v)\n    .sort((a, b) => a.score - b.score);\n\n  // If there are less than 15 modules between finder patterns it's a version 1 QR code and as such has no alignmemnt pattern\n  // so we can only use our best guess.\n  const alignmentPattern = modulesBetweenFinderPatterns >= 15 && alignmentPatterns.length ? alignmentPatterns[0] : expectedAlignmentPattern;\n\n  return { alignmentPattern, dimension };\n}\n","import {binarize} from \"./binarizer\";\nimport {BitMatrix} from \"./BitMatrix\";\nimport {Chunks} from \"./decoder/decodeData\";\nimport {decode} from \"./decoder/decoder\";\nimport {extract} from \"./extractor\";\nimport {locate, Point} from \"./locator\";\n\nexport interface QRCode {\n  binaryData: number[];\n  data: string;\n  chunks: Chunks;\n  location: {\n    topRightCorner: Point;\n    topLeftCorner: Point;\n    bottomRightCorner: Point;\n    bottomLeftCorner: Point;\n\n    topRightFinderPattern: Point;\n    topLeftFinderPattern: Point;\n    bottomLeftFinderPattern: Point;\n\n    bottomRightAlignmentPattern?: Point;\n  };\n  matrix: BitMatrix;\n}\n\nfunction scan(matrix: BitMatrix): QRCode | null {\n  const locations = locate(matrix);\n  if (!locations) {\n    return null;\n  }\n\n  for (const location of locations) {\n    const extracted = extract(matrix, location);\n    const decoded = decode(extracted.matrix);\n    if (decoded) {\n      return {\n        binaryData: decoded.bytes,\n        data: decoded.text,\n        chunks: decoded.chunks,\n        location: {\n          topRightCorner: extracted.mappingFunction(location.dimension, 0),\n          topLeftCorner: extracted.mappingFunction(0, 0),\n          bottomRightCorner: extracted.mappingFunction(location.dimension, location.dimension),\n          bottomLeftCorner: extracted.mappingFunction(0, location.dimension),\n\n          topRightFinderPattern: location.topRight,\n          topLeftFinderPattern: location.topLeft,\n          bottomLeftFinderPattern: location.bottomLeft,\n\n          bottomRightAlignmentPattern: location.alignmentPattern,\n        },\n        matrix: extracted.matrix,\n      };\n    }\n  }\n  return null;\n}\n\nexport interface Options {\n  inversionAttempts?: \"dontInvert\" | \"onlyInvert\" | \"attemptBoth\" | \"invertFirst\";\n  greyScaleWeights?: GreyscaleWeights;\n  canOverwriteImage?: boolean;\n}\n\nexport interface GreyscaleWeights {\n  red: number;\n  green: number;\n  blue: number;\n  useIntegerApproximation?: boolean;\n}\n\nconst defaultOptions: Options = {\n  inversionAttempts: \"attemptBoth\",\n  greyScaleWeights: {\n    red: 0.2126,\n    green: 0.7152,\n    blue: 0.0722,\n    useIntegerApproximation: false,\n  },\n  canOverwriteImage: true,\n};\n\nfunction mergeObject(target: any, src: any) {\n  Object.keys(src).forEach(opt => { // Sad implementation of Object.assign since we target es5 not es6\n    target[opt] = src[opt];\n  });\n}\n\nfunction jsQR(data: Uint8ClampedArray, width: number, height: number, providedOptions: Options = {}): QRCode | null {\n  const options = Object.create(null);\n  mergeObject(options, defaultOptions);\n  mergeObject(options, providedOptions);\n\n  const tryInvertedFirst = options.inversionAttempts === \"onlyInvert\" || options.inversionAttempts === \"invertFirst\";\n  const shouldInvert = options.inversionAttempts === \"attemptBoth\" || tryInvertedFirst;\n  const {binarized, inverted} = binarize(data, width, height, shouldInvert, options.greyScaleWeights,\n      options.canOverwriteImage);\n  let result = scan(tryInvertedFirst ? inverted : binarized);\n  if (!result && (options.inversionAttempts === \"attemptBoth\" || options.inversionAttempts === \"invertFirst\")) {\n    result = scan(tryInvertedFirst ? binarized : inverted);\n  }\n  return result;\n}\n\n(jsQR as any).default = jsQR;\nexport default jsQR;\n","/* --------------------------------------------------\nHybrid ES2015/ESLint'ed fork of Javascript Only Barcode_Reader\n\nOriginal JOB sourcecode by Eddie Larsson <https://github.com/EddieLa/BarcodeReader>\n\nThis software is provided under the MIT license, http://opensource.org/licenses/MIT.\nAll use of this software must include this\ntext, including the reference to the creator of the original source code. The\noriginator accepts no responsibility of any kind pertaining to\nuse of this software.\n\nCopyright (c) 2013 Eddie Larsson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the 'Software'), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n------------------------ */\n\nconst availableFormats = [\n    'Code128',\n    'Code93',\n    'Code39',\n    'EAN-13',\n    '2Of5',\n    'Inter2Of5',\n    'Codabar'\n];\n\nconst TwoOfFiveEncoding = [\n    '00110',\n    '10001',\n    '01001',\n    '11000',\n    '00101',\n    '10100',\n    '01100',\n    '00011',\n    '10010',\n    '01010'\n];\n\nconst Code128Encoding = {\n    '212222': {\n        A: ' ',\n        B: ' ',\n        C: '00'\n    },\n    '222122': {\n        A: '!',\n        B: '!',\n        C: '01'\n    },\n    '222221': {\n        A: '\\'',\n        B: '\\'',\n        C: '02'\n    },\n    '121223': {\n        A: '#',\n        B: '#',\n        C: '03'\n    },\n    '121322': {\n        A: '$',\n        B: '$',\n        C: '04'\n    },\n    '131222': {\n        A: '%',\n        B: '%',\n        C: '05'\n    },\n    '122213': {\n        A: '&',\n        B: '&',\n        C: '06'\n    },\n    '122312': {\n        A: '\\'',\n        B: '\\'',\n        C: '07'\n    },\n    '132212': {\n        A: '(',\n        B: '(',\n        C: '08'\n    },\n    '221213': {\n        A: ')',\n        B: ')',\n        C: '09'\n    },\n    '221312': {\n        A: '*',\n        B: '*',\n        C: '10'\n    },\n    '231212': {\n        A: '+',\n        B: '+',\n        C: '11'\n    },\n    '112232': {\n        A: ',',\n        B: ',',\n        C: '12'\n    },\n    '122132': {\n        A: '-',\n        B: '-',\n        C: '13'\n    },\n    '122231': {\n        A: '.',\n        B: '.',\n        C: '14'\n    },\n    '113222': {\n        A: '/',\n        B: '/',\n        C: '15'\n    },\n    '123122': {\n        A: '0',\n        B: '0',\n        C: '16'\n    },\n    '123221': {\n        A: '1',\n        B: '1',\n        C: '17'\n    },\n    '223211': {\n        A: '2',\n        B: '2',\n        C: '18'\n    },\n    '221132': {\n        A: '3',\n        B: '3',\n        C: '19'\n    },\n    '221231': {\n        A: '4',\n        B: '4',\n        C: '20'\n    },\n    '213212': {\n        A: '5',\n        B: '5',\n        C: '21'\n    },\n    '223112': {\n        A: '6',\n        B: '6',\n        C: '22'\n    },\n    '312131': {\n        A: '7',\n        B: '7',\n        C: '23'\n    },\n    '311222': {\n        A: '8',\n        B: '8',\n        C: '24'\n    },\n    '321122': {\n        A: '9',\n        B: '9',\n        C: '25'\n    },\n    '321221': {\n        A: ':',\n        B: ':',\n        C: '26'\n    },\n    '312212': {\n        A: ';',\n        B: ';',\n        C: '27'\n    },\n    '322112': {\n        A: '<',\n        B: '<',\n        C: '28'\n    },\n    '322211': {\n        A: '=',\n        B: '=',\n        C: '29'\n    },\n    '212123': {\n        A: '>',\n        B: '>',\n        C: '30'\n    },\n    '212321': {\n        A: '?',\n        B: '?',\n        C: '31'\n    },\n    '232121': {\n        A: '@',\n        B: '@',\n        C: '32'\n    },\n    '111323': {\n        A: 'A',\n        B: 'A',\n        C: '33'\n    },\n    '131123': {\n        A: 'B',\n        B: 'B',\n        C: '34'\n    },\n    '131321': {\n        A: 'C',\n        B: 'C',\n        C: '35'\n    },\n    '112313': {\n        A: 'D',\n        B: 'D',\n        C: '36'\n    },\n    '132113': {\n        A: 'E',\n        B: 'E',\n        C: '37'\n    },\n    '132311': {\n        A: 'F',\n        B: 'F',\n        C: '38'\n    },\n    '211313': {\n        A: 'G',\n        B: 'G',\n        C: '39'\n    },\n    '231113': {\n        A: 'H',\n        B: 'H',\n        C: '40'\n    },\n    '231311': {\n        A: 'I',\n        B: 'I',\n        C: '41'\n    },\n    '112133': {\n        A: 'J',\n        B: 'J',\n        C: '42'\n    },\n    '112331': {\n        A: 'K',\n        B: 'K',\n        C: '43'\n    },\n    '132131': {\n        A: 'L',\n        B: 'L',\n        C: '44'\n    },\n    '113123': {\n        A: 'M',\n        B: 'M',\n        C: '45'\n    },\n    '113321': {\n        A: 'N',\n        B: 'N',\n        C: '46'\n    },\n    '133121': {\n        A: 'O',\n        B: 'O',\n        C: '47'\n    },\n    '313121': {\n        A: 'P',\n        B: 'P',\n        C: '48'\n    },\n    '211331': {\n        A: 'Q',\n        B: 'Q',\n        C: '49'\n    },\n    '231131': {\n        A: 'R',\n        B: 'R',\n        C: '50'\n    },\n    '213113': {\n        A: 'S',\n        B: 'S',\n        C: '51'\n    },\n    '213311': {\n        A: 'T',\n        B: 'T',\n        C: '52'\n    },\n    '213131': {\n        A: 'U',\n        B: 'U',\n        C: '53'\n    },\n    '311123': {\n        A: 'V',\n        B: 'V',\n        C: '54'\n    },\n    '311321': {\n        A: 'W',\n        B: 'W',\n        C: '55'\n    },\n    '331121': {\n        A: 'X',\n        B: 'X',\n        C: '56'\n    },\n    '312113': {\n        A: 'Y',\n        B: 'Y',\n        C: '57'\n    },\n    '312311': {\n        A: 'Z',\n        B: 'Z',\n        C: '58'\n    },\n    '332111': {\n        A: '[',\n        B: '[',\n        C: '59'\n    },\n    '314111': {\n        A: '\\\\',\n        B: '\\\\',\n        C: '60'\n    },\n    '221411': {\n        A: ']',\n        B: ']',\n        C: '61'\n    },\n    '431111': {\n        A: '^',\n        B: '^',\n        C: '62'\n    },\n    '111224': {\n        A: '_',\n        B: '_',\n        C: '63'\n    },\n    '111422': {\n        A: 'NUL',\n        B: '`',\n        C: '64'\n    },\n    '121124': {\n        A: 'SOH',\n        B: 'a',\n        C: '65'\n    },\n    '121421': {\n        A: 'STX',\n        B: 'b',\n        C: '66'\n    },\n    '141122': {\n        A: 'ETX',\n        B: 'c',\n        C: '67'\n    },\n    '141221': {\n        A: 'EOT',\n        B: 'd',\n        C: '68'\n    },\n    '112214': {\n        A: 'ENQ',\n        B: 'e',\n        C: '69'\n    },\n    '112412': {\n        A: 'ACK',\n        B: 'f',\n        C: '70'\n    },\n    '122114': {\n        A: 'BEL',\n        B: 'g',\n        C: '71'\n    },\n    '122411': {\n        A: 'BS',\n        B: 'h',\n        C: '72'\n    },\n    '142112': {\n        A: 'HT',\n        B: 'i',\n        C: '73'\n    },\n    '142211': {\n        A: 'LF',\n        B: 'j',\n        C: '74'\n    },\n    '241211': {\n        A: 'VT',\n        B: 'k',\n        C: '75'\n    },\n    '221114': {\n        A: 'FF',\n        B: 'l',\n        C: '76'\n    },\n    '413111': {\n        A: 'CR',\n        B: 'm',\n        C: '77'\n    },\n    '241112': {\n        A: 'SO',\n        B: 'n',\n        C: '78'\n    },\n    '134111': {\n        A: 'SI',\n        B: 'o',\n        C: '79'\n    },\n    '111242': {\n        A: 'DLE',\n        B: 'p',\n        C: '80'\n    },\n    '121142': {\n        A: 'DC1',\n        B: 'q',\n        C: '81'\n    },\n    '121241': {\n        A: 'DC2',\n        B: 'r',\n        C: '82'\n    },\n    '114212': {\n        A: 'DC3',\n        B: 's',\n        C: '83'\n    },\n    '124112': {\n        A: 'DC4',\n        B: 't',\n        C: '84'\n    },\n    '124211': {\n        A: 'NAK',\n        B: 'u',\n        C: '85'\n    },\n    '411212': {\n        A: 'SYN',\n        B: 'v',\n        C: '86'\n    },\n    '421112': {\n        A: 'ETB',\n        B: 'w',\n        C: '87'\n    },\n    '421211': {\n        A: 'CAN',\n        B: 'x',\n        C: '88'\n    },\n    '212141': {\n        A: 'EM',\n        B: 'y',\n        C: '89'\n    },\n    '214121': {\n        A: 'SUB',\n        B: 'z',\n        C: '90'\n    },\n    '412121': {\n        A: 'ESC',\n        B: '{',\n        C: '91'\n    },\n    '111143': {\n        A: 'FS',\n        B: '|',\n        C: '92'\n    },\n    '111341': {\n        A: 'GS',\n        B: '}',\n        C: '93'\n    },\n    '131141': {\n        A: 'RS',\n        B: '~',\n        C: '94'\n    },\n    '114113': {\n        A: 'US',\n        B: 'DEL',\n        C: '95'\n    },\n    '114311': {\n        A: 'FNC3',\n        B: 'FNC3',\n        C: '96'\n    },\n    '411113': {\n        A: 'FNC2',\n        B: 'FNC2',\n        C: '97'\n    },\n    '411311': {\n        A: 'SHIFT_B',\n        B: 'SHIFT_A',\n        C: '98'\n    },\n    '113141': {\n        A: 'Code_C',\n        B: 'Code_C',\n        C: '99'\n    },\n    '114131': {\n        A: 'Code_B',\n        B: 'FNC4',\n        C: 'Code_B'\n    },\n    '311141': {\n        A: 'FNC4',\n        B: 'Code_A',\n        C: 'Code_A'\n    },\n    '411131': {\n        A: 'FNC1',\n        B: 'FNC1',\n        C: 'FNC1'\n    },\n    '211412': 'A',\n    '211214': 'B',\n    '211232': 'C',\n    '233111': {\n        A: 'STOP',\n        B: 'STOP',\n        C: 'STOP'\n    },\n    value: [\n        '212222',\n        '222122',\n        '222221',\n        '121223',\n        '121322',\n        '131222',\n        '122213',\n        '122312',\n        '132212',\n        '221213',\n        '221312',\n        '231212',\n        '112232',\n        '122132',\n        '122231',\n        '113222',\n        '123122',\n        '123221',\n        '223211',\n        '221132',\n        '221231',\n        '213212',\n        '223112',\n        '312131',\n        '311222',\n        '321122',\n        '321221',\n        '312212',\n        '322112',\n        '322211',\n        '212123',\n        '212321',\n        '232121',\n        '111323',\n        '131123',\n        '131321',\n        '112313',\n        '132113',\n        '132311',\n        '211313',\n        '231113',\n        '231311',\n        '112133',\n        '112331',\n        '132131',\n        '113123',\n        '113321',\n        '133121',\n        '313121',\n        '211331',\n        '231131',\n        '213113',\n        '213311',\n        '213131',\n        '311123',\n        '311321',\n        '331121',\n        '312113',\n        '312311',\n        '332111',\n        '314111',\n        '221411',\n        '431111',\n        '111224',\n        '111422',\n        '121124',\n        '121421',\n        '141122',\n        '141221',\n        '112214',\n        '112412',\n        '122114',\n        '122411',\n        '142112',\n        '142211',\n        '241211',\n        '221114',\n        '413111',\n        '241112',\n        '134111',\n        '111242',\n        '121142',\n        '121241',\n        '114212',\n        '124112',\n        '124211',\n        '411212',\n        '421112',\n        '421211',\n        '212141',\n        '214121',\n        '412121',\n        '111143',\n        '111341',\n        '131141',\n        '114113',\n        '114311',\n        '411113',\n        '411311',\n        '113141',\n        '114131',\n        '311141',\n        '411131',\n        '211412',\n        '211214',\n        '211232',\n        '233111'\n    ]\n};\n\nconst Code93Encoding = {\n    '131112': {\n        value: 0,\n        character: '0'\n    },\n    '111213': {\n        value: 1,\n        character: '1'\n    },\n    '111312': {\n        value: 2,\n        character: '2'\n    },\n    '111411': {\n        value: 3,\n        character: '3'\n    },\n    '121113': {\n        value: 4,\n        character: '4'\n    },\n    '121212': {\n        value: 5,\n        character: '5'\n    },\n    '121311': {\n        value: 6,\n        character: '6'\n    },\n    '111114': {\n        value: 7,\n        character: '7'\n    },\n    '131211': {\n        value: 8,\n        character: '8'\n    },\n    '141111': {\n        value: 9,\n        character: '9'\n    },\n    '211113': {\n        value: 10,\n        character: 'A'\n    },\n    '211212': {\n        value: 11,\n        character: 'B'\n    },\n    '211311': {\n        value: 12,\n        character: 'C'\n    },\n    '221112': {\n        value: 13,\n        character: 'D'\n    },\n    '221211': {\n        value: 14,\n        character: 'E'\n    },\n    '231111': {\n        value: 15,\n        character: 'F'\n    },\n    '112113': {\n        value: 16,\n        character: 'G'\n    },\n    '112212': {\n        value: 17,\n        character: 'H'\n    },\n    '112311': {\n        value: 18,\n        character: 'I'\n    },\n    '122112': {\n        value: 19,\n        character: 'J'\n    },\n    '132111': {\n        value: 20,\n        character: 'K'\n    },\n    '111123': {\n        value: 21,\n        character: 'L'\n    },\n    '111222': {\n        value: 22,\n        character: 'M'\n    },\n    '111321': {\n        value: 23,\n        character: 'N'\n    },\n    '121122': {\n        value: 24,\n        character: 'O'\n    },\n    '131121': {\n        value: 25,\n        character: 'P'\n    },\n    '212112': {\n        value: 26,\n        character: 'Q'\n    },\n    '212211': {\n        value: 27,\n        character: 'R'\n    },\n    '211122': {\n        value: 28,\n        character: 'S'\n    },\n    '211221': {\n        value: 29,\n        character: 'T'\n    },\n    '221121': {\n        value: 30,\n        character: 'U'\n    },\n    '222111': {\n        value: 31,\n        character: 'V'\n    },\n    '112122': {\n        value: 32,\n        character: 'W'\n    },\n    '112221': {\n        value: 33,\n        character: 'X'\n    },\n    '122121': {\n        value: 34,\n        character: 'Y'\n    },\n    '123111': {\n        value: 35,\n        character: 'Z'\n    },\n    '121131': {\n        value: 36,\n        character: '-'\n    },\n    '311112': {\n        value: 37,\n        character: '.'\n    },\n    '311211': {\n        value: 38,\n        character: ' '\n    },\n    '321111': {\n        value: 39,\n        character: '$'\n    },\n    '112131': {\n        value: 40,\n        character: '/'\n    },\n    '113121': {\n        value: 41,\n        character: '+'\n    },\n    '211131': {\n        value: 42,\n        character: '%'\n    },\n    '121221': {\n        value: 43,\n        character: '($)'\n    },\n    '312111': {\n        value: 44,\n        character: '(%)'\n    },\n    '311121': {\n        value: 45,\n        character: '(/)'\n    },\n    '122211': {\n        value: 46,\n        character: '(+)'\n    },\n    '111141': {\n        value: -1,\n        character: '*'\n    }\n};\n\nconst Code39Encoding = {\n    '111221211': {\n        value: 0,\n        character: '0'\n    },\n    '211211112': {\n        value: 1,\n        character: '1'\n    },\n    '112211112': {\n        value: 2,\n        character: '2'\n    },\n    '212211111': {\n        value: 3,\n        character: '3'\n    },\n    '111221112': {\n        value: 4,\n        character: '4'\n    },\n    '211221111': {\n        value: 5,\n        character: '5'\n    },\n    '112221111': {\n        value: 6,\n        character: '6'\n    },\n    '111211212': {\n        value: 7,\n        character: '7'\n    },\n    '211211211': {\n        value: 8,\n        character: '8'\n    },\n    '112211211': {\n        value: 9,\n        character: '9'\n    },\n    '211112112': {\n        value: 10,\n        character: 'A'\n    },\n    '112112112': {\n        value: 11,\n        character: 'B'\n    },\n    '212112111': {\n        value: 12,\n        character: 'C'\n    },\n    '111122112': {\n        value: 13,\n        character: 'D'\n    },\n    '211122111': {\n        value: 14,\n        character: 'E'\n    },\n    '112122111': {\n        value: 15,\n        character: 'F'\n    },\n    '111112212': {\n        value: 16,\n        character: 'G'\n    },\n    '211112211': {\n        value: 17,\n        character: 'H'\n    },\n    '112112211': {\n        value: 18,\n        character: 'I'\n    },\n    '111122211': {\n        value: 19,\n        character: 'J'\n    },\n    '211111122': {\n        value: 20,\n        character: 'K'\n    },\n    '112111122': {\n        value: 21,\n        character: 'L'\n    },\n    '212111121': {\n        value: 22,\n        character: 'M'\n    },\n    '111121122': {\n        value: 23,\n        character: 'N'\n    },\n    '211121121': {\n        value: 24,\n        character: 'O'\n    },\n    '112121121': {\n        value: 25,\n        character: 'P'\n    },\n    '111111222': {\n        value: 26,\n        character: 'Q'\n    },\n    '211111221': {\n        value: 27,\n        character: 'R'\n    },\n    '112111221': {\n        value: 28,\n        character: 'S'\n    },\n    '111121221': {\n        value: 29,\n        character: 'T'\n    },\n    '221111112': {\n        value: 30,\n        character: 'U'\n    },\n    '122111112': {\n        value: 31,\n        character: 'V'\n    },\n    '222111111': {\n        value: 32,\n        character: 'W'\n    },\n    '121121112': {\n        value: 33,\n        character: 'X'\n    },\n    '221121111': {\n        value: 34,\n        character: 'Y'\n    },\n    '122121111': {\n        value: 35,\n        character: 'Z'\n    },\n    '121111212': {\n        value: 36,\n        character: '-'\n    },\n    '221111211': {\n        value: 37,\n        character: '.'\n    },\n    '122111211': {\n        value: 38,\n        character: ' '\n    },\n    '121212111': {\n        value: 39,\n        character: '$'\n    },\n    '121211121': {\n        value: 40,\n        character: '/'\n    },\n    '121112121': {\n        value: 41,\n        character: '+'\n    },\n    '111212121': {\n        value: 42,\n        character: '%'\n    },\n    '121121211': {\n        value: -1,\n        character: '*'\n    }\n};\n\nconst ExtendedEncoding = {\n    '/A': '!',\n    '/B': '\\'',\n    '/C': '#',\n    '/D': '$',\n    '/E': '%',\n    '/F': '&',\n    '/G': '\\'',\n    '/H': '(',\n    '/I': ')',\n    '/J': '*',\n    '/K': '+',\n    '/L': ',',\n    '/O': '/',\n    '/Z': ':',\n    '%F': ';',\n    '%G': '<',\n    '%H': '=',\n    '%I': '>',\n    '%J': '?',\n    '%K': '[',\n    '%L': '\\\\',\n    '%M': ']',\n    '%N': '^',\n    '%O': '_',\n    '+A': 'a',\n    '+B': 'b',\n    '+C': 'c',\n    '+D': 'd',\n    '+E': 'e',\n    '+F': 'f',\n    '+G': 'g',\n    '+H': 'h',\n    '+I': 'i',\n    '+J': 'j',\n    '+K': 'k',\n    '+L': 'l',\n    '+M': 'm',\n    '+N': 'n',\n    '+O': 'o',\n    '+P': 'p',\n    '+Q': 'q',\n    '+R': 'r',\n    '+S': 's',\n    '+T': 't',\n    '+U': 'u',\n    '+V': 'v',\n    '+W': 'w',\n    '+X': 'x',\n    '+Y': 'y',\n    '+Z': 'z',\n    '%P': '{',\n    '%Q': '|',\n    '%R': '|',\n    '%S': '~',\n};\n\nconst CodaBarEncoding = {\n    '0000011': '0',\n    '0000110': '1',\n    '0001001': '2',\n    '1100000': '3',\n    '0010010': '4',\n    '1000010': '5',\n    '0100001': '6',\n    '0100100': '7',\n    '0110000': '8',\n    '1001000': '9',\n    '0001100': '-',\n    '0011000': '$',\n    '1000101': ':',\n    '1010001': '/',\n    '1010100': '.',\n    '0011111': '+',\n    '0011010': 'A',\n    '0001011': 'B',\n    '0101001': 'C',\n    '0001110': 'D'\n};\n\nconst EAN13Encoding = {\n    'L': {\n        '3211': 0,\n        '2221': 1,\n        '2122': 2,\n        '1411': 3,\n        '1132': 4,\n        '1231': 5,\n        '1114': 6,\n        '1312': 7,\n        '1213': 8,\n        '3112': 9\n    },\n    'G': {\n        '1123': 0,\n        '1222': 1,\n        '2212': 2,\n        '1141': 3,\n        '2311': 4,\n        '1321': 5,\n        '4111': 6,\n        '2131': 7,\n        '3121': 8,\n        '2113': 9\n    },\n    'R': {\n        '3211': 0,\n        '2221': 1,\n        '2122': 2,\n        '1411': 3,\n        '1132': 4,\n        '1231': 5,\n        '1114': 6,\n        '1312': 7,\n        '1213': 8,\n        '3112': 9\n    },\n    formats: {\n        'LLLLLL': 0,\n        'LLGLGG': 1,\n        'LLGGLG': 2,\n        'LLGGGL': 3,\n        'LGLLGG': 4,\n        'LGGLLG': 5,\n        'LGGGLL': 6,\n        'LGLGLG': 7,\n        'LGLGGL': 8,\n        'LGGLGL': 9\n    }\n};\n\nconst SecureCodabar = true;\nconst Secure2Of5 = true;\nlet Image, ScanImage, allTables, FormatPriority, Multiple, Locations;\n\nfunction Rotate(data, width, height, rotation) {\n    var newData = [];\n    var x, y;\n\n    switch (rotation) {\n        case 90:\n            for (x = 0; x < width * 4; x += 4) {\n                for (y = width * 4 * (height - 1); y >= 0; y -= width * 4) {\n                    newData.push(data[x + y]);\n                    newData.push(data[x + y + 1]);\n                    newData.push(data[x + y + 2]);\n                    newData.push(data[x + y + 3]);\n                }\n            }\n            break;\n        case -90:\n            for (x = width * 4 - 4; x >= 0; x -= 4) {\n                for (y = 0; y < data.length; y += width * 4) {\n                    newData.push(data[x + y]);\n                    newData.push(data[x + y + 1]);\n                    newData.push(data[x + y + 2]);\n                    newData.push(data[x + y + 3]);\n                }\n            }\n            break;\n        case 180:\n            for (y = width * 4 * (height - 1); y >= 0; y -= width * 4) {\n                for (x = width * 4 - 4; x >= 0; x -= 4) {\n                    newData.push(data[x + y]);\n                    newData.push(data[x + y + 1]);\n                    newData.push(data[x + y + 2]);\n                    newData.push(data[x + y + 3]);\n                }\n            }\n    }\n    return new Uint8ClampedArray(newData);\n}\n\nfunction BoxFilter(data, width, radius) {\n\n    // Pre-allocate\n    let sum = new Array(width).fill(0);\n    let elements = new Array(width).fill().map((e, i) => []);\n    const innerLoopLength = (radius + 1) * width;\n    const dataLength = data.length;\n\n    let output = new Array(dataLength + width);\n\n    for (let x = 0; x < width; x++) {\n        for (let y = 0; y < innerLoopLength; y += width) {\n            elements[x].push(data[x + y]);\n            sum[x] = sum[x] + data[x + y];\n        }\n    }\n\n    // elements length doesn't change from here\n    // can be made const so we don't have to reeval\n    const elementsLength = elements.length;\n\n    for (let y = 0; y < dataLength; y += width) {\n        for (let x = 0; x < width; x++) {\n            let newVal = 0;\n            let length = 0;\n            let tempLength = 0;\n\n            for (let i = x; i >= 0; i--) {\n                newVal += sum[i];\n                length++;\n                if (length === radius + 1) break;\n            }\n\n            for (let i = x + 1; i < width; i++) {\n                newVal += sum[i];\n                length++;\n                tempLength++;\n                if (tempLength === radius) break;\n            }\n\n            length *= elements[0].length;\n            newVal /= length;\n            output[y + x] = newVal;\n        }\n        if (y - radius * width >= 0) {\n            for (let i = 0; i < elementsLength; i++) {\n                let val = elements[i].shift();\n\n                sum[i] = sum[i] - val;\n            }\n        }\n        if (y + (radius + 1) * width < dataLength) {\n            for (let i = 0; i < elementsLength; i++) {\n                let val = data[i + y + (radius + 1) * width];\n\n                elements[i].push(val);\n                sum[i] = sum[i] + val;\n            }\n        }\n    }\n    return output;\n}\n\nfunction Scale(data, width, height) {\n    var newData = [];\n    var x, y;\n\n    for (y = 0; y < data.length; y += width * 8) {\n        for (x = 0; x < width * 4; x += 8) {\n            let r = (data[y + x] + data[y + x + 4] + data[y + width * 4 + x] + data[y + width * 4 + x + 4]) / 4;\n\n            newData.push(r);\n            let g = (data[y + x + 1] + data[y + x + 4 + 1] + data[y + width * 4 + x + 1] +\n                data[y + width * 4 + x + 4 + 1]) / 4;\n\n            newData.push(g);\n            let b = (data[y + x + 2] + data[y + x + 4 + 2] + data[y + width * 4 + x + 2] +\n                data[y + width * 4 + x + 4 + 2]) / 4;\n\n            newData.push(b);\n            newData.push(255);\n        }\n    }\n    return new Uint8ClampedArray(newData);\n}\n\nfunction IntensityGradient(data, width) {\n    var newData = [];\n    var max = Number.MIN_VALUE;\n    var min = Number.MAX_VALUE;\n    var x, y, i;\n\n    for (y = 0; y < data.length; y += width * 4) {\n        for (x = 0; x < width * 4; x += 4) {\n            let horizontalDiff = 0;\n            let verticalDiff = 0;\n\n            for (i = 1; i < 2; i++) {\n                if (x + i * 4 < width * 4) {\n                    horizontalDiff = horizontalDiff + Math.abs(data[y + x] - data[y + x + i * 4]);\n                }\n                if (y + width * 4 * i < data.length) {\n                    verticalDiff += verticalDiff + Math.abs(data[y + x] - data[y + x + width * 4 * i]);\n                }\n            }\n            let diff = horizontalDiff - verticalDiff;\n\n            max = diff > max ? diff : max;\n            min = diff < min ? diff : min;\n            newData.push(diff);\n        }\n    }\n    if (min < 0) {\n        for (i = 0; i < newData.length; i++) {\n            newData[i] = newData[i] - min;\n        }\n        min = 0;\n    }\n    return newData;\n}\n\nfunction greyScale(data) {\n    for (let i = 0; i < data.length; i += 4) {\n        let max = 0;\n        let min = 255;\n\n        max = data[i] > max ? data[i] : max;\n        max = data[i + 1] > max ? data[i + 1] : max;\n        max = data[i + 2] > max ? data[i + 2] : max;\n        min = data[i] < min ? data[i] : min;\n        min = data[i + 1] < min ? data[i + 1] : min;\n        min = data[i + 2] < min ? data[i + 2] : min;\n        data[i] = data[i + 1] = data[i + 2] = (max + min) / 2;\n    }\n}\n\n// function histogram(data) {\n//   var i;\n//   var hist = [];\n\n//   for (i = 0; i < 256; i++) {\n//     hist[i] = 0;\n//   }\n//   for (i = 0; i < data.length; i += 4) {\n//     hist[data[i]] = hist[data[i]] + 1;\n//   }\n//   return hist;\n// }\n\nfunction otsu(histogram, total) {\n    var i;\n    var sum = 0;\n    var sumB = 0;\n    var wB = 0;\n    var wF = 0;\n    var mB;\n    var mF;\n    var max = 0.0;\n    var between = 0.0;\n    var threshold1 = 0.0;\n    var threshold2 = 0.0;\n\n    const histogramLength = histogram.length;\n\n    for (i = 1; i < histogramLength; ++i) {\n        sum += i * histogram[i];\n    }\n\n    for (i = 0; i < histogramLength; ++i) {\n        wB += histogram[i];\n        if (wB === 0) {\n            continue;\n        }\n        wF = total - wB;\n        if (wF === 0) {\n            break;\n        }\n        sumB += i * histogram[i];\n        mB = sumB / wB;\n        mF = (sum - sumB) / wF;\n        between = wB * wF * Math.pow(mB - mF, 2);\n        if (between >= max) {\n            threshold1 = i;\n            if (between > max) {\n                threshold2 = i;\n            }\n            max = between;\n        }\n    }\n    return (threshold1 + threshold2) / 2.0;\n}\n\nfunction CreateImageData() {\n    var Converter;\n    var x, y;\n\n    Image.data = new Uint8ClampedArray(Image.width * Image.height * 4);\n\n    for (y = 0; y < Image.height; y++) {\n        for (x = 0; x < Image.width; x++) {\n            Converter = y * 4 * Image.width;\n            Image.data[Converter + x * 4] = Image.table[x][y][0];\n            Image.data[Converter + x * 4 + 1] = Image.table[x][y][1];\n            Image.data[Converter + x * 4 + 2] = Image.table[x][y][2];\n            Image.data[Converter + x * 4 + 3] = Image.table[x][y][3];\n        }\n    }\n}\n\n// function CreateScanImageData() {\n//   var Converter;\n//   var x, y;\n\n//   ScanImage.data = new Uint8ClampedArray(ScanImage.width * ScanImage.height * 4);\n\n//   for (y = 0; y < ScanImage.height; y++) {\n//     for (x = 0; x < ScanImage.width; x++) {\n//       Converter = y * 4 * ScanImage.width;\n//       ScanImage.data[Converter + x * 4] = ScanImage.table[x][y][0];\n//       ScanImage.data[Converter + x * 4 + 1] = ScanImage.table[x][y][1];\n//       ScanImage.data[Converter + x * 4 + 2] = ScanImage.table[x][y][2];\n//       ScanImage.data[Converter + x * 4 + 3] = ScanImage.table[x][y][3];\n//     }\n//   }\n// }\n\nfunction ShuffleTable() {\n    let imageLengthX4 = Image.width * 4;\n\n    Image.table = new Array(imageLengthX4 / 4).fill().map((e, i) => []);\n    ;\n\n    for (let i = 0; i < imageLengthX4; i += 4) {\n        let tempArray = [];\n\n        for (let j = i; j < Image.data.length; j += imageLengthX4) {\n            tempArray.push([Image.data[j], Image.data[j + 1], Image.data[j + 2], Image.data[j + 3]]);\n        }\n        Image.table[i / 4] = tempArray;\n    }\n}\n\nfunction CreateTable() {\n    return new Promise((resolve, reject) => {\n\n        ShuffleTable();\n\n        resolve('CreateTable Complete');\n    });\n}\n\nfunction CreateScanTable() {\n    return new Promise((resolve, reject) => {\n\n        let scanImageDataLength = ScanImage.data.length;\n        let scanImageDataX4 = ScanImage.width * 4;\n\n        ScanImage.table = new Array(scanImageDataX4 / 4).fill().map((e, i) => []);\n\n        for (let i = 0; i < scanImageDataX4; i += 4) {\n            let tempArray = [];\n\n            for (let j = i; j < scanImageDataLength; j += scanImageDataX4) {\n                tempArray.push([ScanImage.data[j], ScanImage.data[j + 1],\n                    ScanImage.data[j + 2], ScanImage.data[j + 3]]);\n            }\n            ScanImage.table[i / 4] = tempArray;\n        }\n        resolve('CreateScanTable Complete');\n    });\n}\n\nfunction EnlargeTable(h, w) {\n    var TempArray = [];\n    var x, y, i;\n\n    for (x = 0; x < Image.width; x++) {\n        TempArray = [];\n        for (y = 0; y < Image.height; y++) {\n            for (i = 0; i < h; i++) {\n                TempArray.push(Image.table[x][y]);\n            }\n        }\n        Image.table[x] = TempArray.slice();\n    }\n    TempArray = Image.table.slice();\n    for (x = 0; x < Image.width; x++) {\n        for (i = 0; i < w; i++) {\n            Image.table[x * w + i] = TempArray[x].slice();\n        }\n    }\n    Image.width = Image.table.length;\n    Image.height = Image.table[0].length;\n    CreateImageData();\n}\n\nfunction ScaleHeight(scale) {\n    var tempArray = [];\n    var avrgRed = 0;\n    var avrgGreen = 0;\n    var avrgBlue = 0;\n    var i, j, k;\n\n    for (i = 0; i < Image.height - scale; i += scale) {\n        for (j = 0; j < Image.width; j++) {\n            avrgRed = 0;\n            avrgGreen = 0;\n            avrgBlue = 0;\n            for (k = i; k < i + scale; k++) {\n                avrgRed += Image.table[j][k][0];\n                avrgGreen += Image.table[j][k][1];\n                avrgBlue += Image.table[j][k][2];\n            }\n            tempArray.push(avrgRed / scale);\n            tempArray.push(avrgGreen / scale);\n            tempArray.push(avrgBlue / scale);\n            tempArray.push(255);\n        }\n    }\n    return new Uint8ClampedArray(tempArray);\n}\n\nfunction Intersects(rectOne, rectTwo) {\n    return (rectOne[0][0] <= rectTwo[0][1] &&\n        rectTwo[0][0] <= rectOne[0][1] &&\n        rectOne[1][0] <= rectTwo[1][1] &&\n        rectTwo[1][0] <= rectOne[1][1]);\n}\n\nfunction maxLocalization(max, maxPos, data) {\n    var originalMax = max;\n    var rects = [];\n    var x, y, i;\n\n    do {\n        let startX = maxPos % Image.width;\n        let startY = (maxPos - startX) / Image.width;\n        let minY = 0;\n        let maxY = Image.height;\n        let minX = 0;\n        let maxX = Image.width - 1;\n\n        for (y = startY; y < Image.height - 1; y++) {\n            if (Image.table[startX][y + 1][0] === 0) {\n                maxY = y;\n                break;\n            }\n        }\n        for (y = startY; y > 0; y--) {\n            if (Image.table[startX][y - 1][0] === 0) {\n                minY = y;\n                break;\n            }\n        }\n        for (x = startX; x < Image.width - 1; x++) {\n            if (Image.table[x + 1][startY][0] === 0) {\n                maxX = x;\n                break;\n            }\n        }\n        for (x = startX; x > 0; x--) {\n            if (Image.table[x - 1][startY][0] === 0) {\n                minX = x;\n                break;\n            }\n        }\n        for (y = minY * Image.width; y <= maxY * Image.width; y += Image.width) {\n            for (x = minX; x <= maxX; x++) {\n                data[y + x] = 0;\n            }\n        }\n        let newRect = [\n            [minX, maxX],\n            [minY, maxY]\n        ];\n\n        for (i = 0; i < rects.length; i++) {\n            if (Intersects(newRect, rects[i])) {\n                if (rects[i][0][1] - rects[i][0][0] > newRect[0][1] - newRect[0][0]) {\n                    rects[i][0][0] = rects[i][0][0] < newRect[0][0] ? rects[i][0][0] : newRect[0][0];\n                    rects[i][0][1] = rects[i][0][1] > newRect[0][1] ? rects[i][0][1] : newRect[0][1];\n                    newRect = [];\n                    break;\n                } else {\n                    rects[i][0][0] = rects[i][0][0] < newRect[0][0] ? rects[i][0][0] : newRect[0][0];\n                    rects[i][0][1] = rects[i][0][1] > newRect[0][1] ? rects[i][0][1] : newRect[0][1];\n                    rects[i][1][0] = newRect[1][0];\n                    rects[i][1][1] = newRect[1][1];\n                    newRect = [];\n                    break;\n                }\n            }\n        }\n        if (newRect.length > 0) {\n            rects.push(newRect);\n        }\n        max = 0;\n        maxPos = 0;\n\n        for (i = 0; i < data.length; i++) {\n            if (data[i] > max) {\n                max = data[i];\n                maxPos = i;\n            }\n        }\n    } while (max > originalMax * 0.70);\n    return rects;\n}\n\nfunction ImgProcessing() {\n    var newData;\n    var min;\n    var i, x, y;\n    var max = 0;\n    var maxPos = 0;\n    var avrgLight = 0;\n\n    greyScale(Image.data);\n\n    newData = IntensityGradient(Image.data, Image.width);\n    min = newData[0];\n\n    newData = BoxFilter(newData, Image.width, 15);\n\n    for (i = 1; i < newData.length; i++) {\n        min = min > newData[i] ? newData[i] : min;\n    }\n\n    for (i = 0; i < newData.length; i++) {\n        newData[i] = Math.round((newData[i] - min));\n        avrgLight += newData[i];\n        if (max < newData[i]) {\n            max = newData[i];\n            maxPos = i;\n        }\n    }\n    avrgLight /= newData.length;\n    if (avrgLight < 15) {\n        newData = BoxFilter(newData, Image.width, 8);\n        min = newData[0];\n        for (i = 1; i < newData.length; i++) {\n            min = min > newData[i] ? newData[i] : min;\n        }\n        max = 0;\n        maxPos = 0;\n        for (i = 0; i < newData.length; i++) {\n            newData[i] = Math.round((newData[i] - min));\n            if (max < newData[i]) {\n                max = newData[i];\n                maxPos = i;\n            }\n        }\n    }\n    let hist = [];\n\n    for (i = 0; i <= max; i++) {\n        hist[i] = 0;\n    }\n    for (i = 0; i < newData.length; i++) {\n        hist[newData[i]] = hist[newData[i]] + 1;\n    }\n    let thresh = otsu(hist, newData.length);\n\n    for (i = 0; i < newData.length; i++) {\n        if (newData[i] < thresh) {\n            Image.data[i * 4] = Image.data[i * 4 + 1] = Image.data[i * 4 + 2] = 0;\n        } else {\n            Image.data[i * 4] = Image.data[i * 4 + 1] = Image.data[i * 4 + 2] = 255;\n        }\n    }\n    ShuffleTable();\n    let rects = maxLocalization(max, maxPos, newData);\n    let feedBack = [];\n\n    for (i = 0; i < rects.length; i++) {\n        feedBack.push({\n            x: rects[i][0][0],\n            y: rects[i][1][0],\n            width: rects[i][0][1] - rects[i][0][0],\n            height: rects[i][1][1] - rects[i][1][0]\n        });\n    }\n    if (feedBack.length > 0) {\n        postMessage({\n            result: feedBack,\n            success: 'localization'\n        });\n    }\n    Locations = feedBack;\n    allTables = [];\n    for (i = 0; i < rects.length; i++) {\n        let newTable = [];\n\n        for (x = rects[i][0][0] * 2; x < rects[i][0][1] * 2; x++) {\n            let tempArray = [];\n\n            for (y = rects[i][1][0] * 2; y < rects[i][1][1] * 2; y++) {\n                tempArray.push([ScanImage.table[x][y][0], ScanImage.table[x][y][1], ScanImage.table[x][y][2], 255]);\n            }\n            newTable.push(tempArray);\n        }\n        if (newTable.length < 1) continue;\n        Image.table = newTable;\n        Image.width = newTable.length;\n        Image.height = newTable[0].length;\n        CreateImageData();\n        allTables.push({\n            table: newTable,\n            data: new Uint8ClampedArray(Image.data),\n            width: Image.width,\n            height: Image.height\n        });\n    }\n}\n\n// function showImage(data, width, height) {\n//   postMessage({\n//     result: data,\n//     width: width,\n//     height: height,\n//     success: 'image'\n//   });\n// }\n\nfunction yStraighten(img, start, end) {\n    var average = 0;\n    var threshold;\n    var newImg = new Uint8ClampedArray(Image.width * (end - start + 1) * 4);\n    var i, j;\n\n    for (i = 0; i < newImg.length; i++) {\n        newImg[i] = 255;\n    }\n    for (i = 0; i < Image.width * 4; i += 4) {\n        threshold = end;\n        average = (img[i] + img[i + 1] + img[i + 2]) / 3;\n        if (i < Image.width * 4 - 4) {\n            average += (img[i + 4] + img[i + 5] + img[i + 6]) / 3;\n            average /= 2;\n        }\n        for (j = i; j < newImg.length; j += Image.width * 4) {\n            if (average < threshold) {\n                newImg[j] = newImg[j + 1] = newImg[j + 2] = 0;\n            }\n            threshold--;\n        }\n    }\n    return newImg;\n}\n\nfunction CheckEan13(values, middle) {\n    if (middle) {\n        if (values.length !== 5) return false;\n    } else {\n        if (values.length !== 3) return false;\n    }\n\n    let avrg = 0;\n\n    for (let i = 0; i < values.length; i++) {\n        avrg += values[i];\n    }\n    avrg /= values.length;\n    for (let i = 0; i < values.length; i++) {\n        if (values[i] / avrg < 0.5 || values[i] / avrg > 1.5) return false;\n    }\n    return true;\n}\n\nfunction BinaryConfiguration(binaryString, type) {\n    var result = [];\n    var binTemp = [];\n    var count = 0;\n    var len;\n    var totalBars;\n    var i;\n\n    if (type === 'Code128' || type === 'Code93') {\n        totalBars = 6;\n        len = binaryString[0];\n        if (type === 'Code128') len /= 2;\n        for (i = 0; i < binaryString.length; i++) {\n            if (binaryString[i] > len * 6) {\n                binaryString.splice(i, binaryString.length);\n                break;\n            }\n        }\n        do {\n            if (binaryString.length === 7 && type === 'Code128') {\n                result.push(binaryString.splice(0, binaryString.length));\n            } else {\n                result.push(binaryString.splice(0, totalBars));\n            }\n            if (type === 'Code93' && binaryString.length < 6) binaryString.splice(0, totalBars);\n        } while (binaryString.length > 0);\n    }\n    if (type === 'Code39') {\n        totalBars = 9;\n        len = binaryString[0];\n        for (i = 0; i < binaryString.length; i++) {\n            if (binaryString[i] > len * 5) {\n                binaryString.splice(i, binaryString.length);\n                break;\n            }\n        }\n        do {\n            result.push(binaryString.splice(0, totalBars));\n            binaryString.splice(0, 1);\n        } while (binaryString.length > 0);\n    }\n    if (type === 'EAN-13') {\n        totalBars = 4;\n        len = binaryString[0];\n        let secureCount = 0;\n\n        for (i = 0; i < binaryString.length; i++) {\n            if (binaryString[i] > len * 6) {\n                binaryString.splice(i, binaryString.length);\n                break;\n            }\n        }\n        if (CheckEan13(binaryString.splice(0, 3), false)) secureCount++;\n        count = 0;\n        do {\n            result.push(binaryString.splice(0, totalBars));\n            count++;\n            if (count === 6) {\n                if (CheckEan13(binaryString.splice(0, 5), true)) secureCount++;\n            }\n        } while (result.length < 12 && binaryString.length > 0);\n        if (CheckEan13(binaryString.splice(0, 3), false)) secureCount++;\n        if (secureCount < 2) return [];\n    }\n    if (type === '2Of5') {\n        totalBars = 5;\n        len = binaryString[0] / 2;\n        for (i = 0; i < binaryString.length; i++) {\n            if (binaryString[i] > len * 5) {\n                binaryString.splice(i, binaryString.length);\n                break;\n            }\n        }\n        let temp = binaryString.splice(0, 6);\n\n        result.push(temp);\n        do {\n            binTemp = [];\n            for (i = 0; i < totalBars; i++) {\n                binTemp.push(binaryString.splice(0, 1)[0]);\n                // binaryString.splice(0, 1)[0];\n            }\n            result.push(binTemp);\n            if (binaryString.length === 5) result.push(binaryString.splice(0, 5));\n        } while (binaryString.length > 0);\n    }\n    if (type === 'Inter2Of5') {\n        totalBars = 5;\n        len = binaryString[0];\n        for (i = 0; i < binaryString.length; i++) {\n            if (binaryString[i] > len * 5) {\n                binaryString.splice(i, binaryString.length);\n                break;\n            }\n        }\n        result.push(binaryString.splice(0, 4));\n        let binTempWhite = [];\n\n        do {\n            binTemp = [];\n            binTempWhite = [];\n            for (i = 0; i < totalBars; i++) {\n                binTemp.push(binaryString.splice(0, 1)[0]);\n                binTempWhite.push(binaryString.splice(0, 1)[0]);\n            }\n            result.push(binTemp);\n            result.push(binTempWhite);\n            if (binaryString.length === 3) result.push(binaryString.splice(0, 3));\n        } while (binaryString.length > 0);\n    }\n    if (type === 'Codabar') {\n        totalBars = 7;\n        len = binaryString[0];\n        for (i = 0; i < binaryString.length; i++) {\n            if (binaryString[i] > len * 5) {\n                binaryString.splice(i, binaryString.length);\n                break;\n            }\n        }\n        do {\n            result.push(binaryString.splice(0, totalBars));\n            binaryString.splice(0, 1);\n        } while (binaryString.length > 0);\n    }\n    return result;\n}\n\nfunction TwoOfFiveStartEnd(values, start) {\n    if (values.length < 5 || values.length > 6) return false;\n    let maximum = 0;\n    let TwoOfFiveMax = [0, 0];\n    let u;\n\n    for (u = 0; u < values.length; u++) {\n        if (values[u] > maximum) {\n            maximum = values[u];\n            TwoOfFiveMax[0] = u;\n        }\n    }\n    maximum = 0;\n    for (u = 0; u < values.length; u++) {\n        if (u === TwoOfFiveMax[0]) continue;\n        if (values[u] > maximum) {\n            maximum = values[u];\n            TwoOfFiveMax[1] = u;\n        }\n    }\n    if (start) {\n        return TwoOfFiveMax[0] + TwoOfFiveMax[1] === 2;\n    }\n    return TwoOfFiveMax[0] + TwoOfFiveMax[1] === 2;\n\n}\n\nfunction CheckInterleaved(values, start) {\n    var average = 0;\n    var i;\n\n    for (i = 0; i < values.length; i++) {\n        average += values[i];\n    }\n    average /= 4;\n    if (start) {\n        if (values.length !== 4) return false;\n        for (i = 0; i < values.length; i++) {\n            if (values[i] / average < 0.5 || values[i] / average > 1.5) return false;\n        }\n        return true;\n    }\n    if (values.length !== 3) return false;\n    let max = 0;\n    let pos;\n\n    for (i = 0; i < values.length; i++) {\n        if (values[i] > max) {\n            max = values[i];\n            pos = i;\n        }\n    }\n    if (pos !== 0) return false;\n    if (values[0] / average < 1.5 || values[0] / average > 2.5) return false;\n    for (i = 1; i < values.length; i++) {\n        if (values[i] / average < 0.5 || values[i] / average > 1.5) return false;\n    }\n    return true;\n\n}\n\nfunction Distribution(totalBinArray, type) {\n    var testData = 0;\n    var result = [];\n    var totalBars;\n    var total;\n    var maxLength;\n    var k, i, j;\n    var blackMax;\n    var whiteMax;\n    var wideAvrg;\n    var narrowAvrg;\n    var prevPos;\n    var wideValues;\n    var max;\n\n    type = availableFormats.indexOf(type);\n\n    if (type === 0) {\n        total = 11;\n        totalBars = 6;\n        maxLength = 4;\n    } else if (type === 1) {\n        total = 9;\n        totalBars = 6;\n        maxLength = 4;\n    } else if (type === 2) {\n        total = 12;\n        totalBars = 9;\n    } else if (type === 3) {\n        total = 7;\n        totalBars = 4;\n        maxLength = 4;\n    } else if (type === 6) {\n        totalBars = 7;\n    }\n    for (k = 0; k < totalBinArray.length; k++) {\n        let BinArray = totalBinArray[k];\n        let sum = 0;\n        let counter = 0;\n        let tempBin = [];\n\n        if (type === 6) {\n            let upperTolerance = 1.5;\n            let lowerTolerance = 1 / 2;\n\n            if (BinArray.length !== 7) return [];\n            if (k === 0 || k === totalBinArray.length - 1) {\n                whiteMax = [\n                    [0, 0],\n                    [0, 0]\n                ];\n                blackMax = [0, 0];\n                for (i = 0; i < BinArray.length; i++) {\n                    if (i % 2 === 0) {\n                        if (BinArray[i] > blackMax[0]) {\n                            blackMax[0] = BinArray[i];\n                            blackMax[1] = i;\n                        }\n                    } else {\n                        if (BinArray[i] > whiteMax[0][0]) {\n                            whiteMax[0][0] = BinArray[i];\n                            prevPos = whiteMax[0][1];\n                            whiteMax[0][1] = i;\n                            i = prevPos - 1;\n                            continue;\n                        }\n                        if (BinArray[i] > whiteMax[1][0] && i !== whiteMax[0][1]) {\n                            whiteMax[1][0] = BinArray[i];\n                            whiteMax[1][1] = i;\n                        }\n                    }\n                }\n                if (SecureCodabar) {\n                    wideAvrg = whiteMax[0][0] + whiteMax[1][0] + blackMax[0];\n                    wideAvrg /= 3;\n                    wideValues = [whiteMax[0][0], whiteMax[1][0], blackMax[0]];\n                    for (i = 0; i < wideValues.length; i++) {\n                        if (wideValues[i] / wideAvrg > upperTolerance || wideValues[i] / wideAvrg < lowerTolerance) return [];\n                    }\n                    narrowAvrg = 0;\n                    for (i = 0; i < BinArray.length; i++) {\n                        if (i === blackMax[1] || i === whiteMax[0][1] || i === whiteMax[1][1]) continue;\n                        narrowAvrg += BinArray[i];\n                    }\n                    narrowAvrg /= 4;\n                    for (i = 0; i < BinArray.length; i++) {\n                        if (i === blackMax[1] || i === whiteMax[0][1] || i === whiteMax[1][1]) continue;\n                        if (BinArray[i] / narrowAvrg > upperTolerance || BinArray[i] / narrowAvrg < lowerTolerance) return [];\n                    }\n                }\n                for (i = 0; i < BinArray.length; i++) {\n                    if (i === blackMax[1] || i === whiteMax[0][1] || i === whiteMax[1][1]) {\n                        tempBin.push(1);\n                    } else {\n                        tempBin.push(0);\n                    }\n                }\n            } else {\n                blackMax = [0, 0];\n                whiteMax = [0, 0];\n                for (i = 0; i < BinArray.length; i++) {\n                    if (i % 2 === 0) {\n                        if (BinArray[i] > blackMax[0]) {\n                            blackMax[0] = BinArray[i];\n                            blackMax[1] = i;\n                        }\n                    } else {\n                        if (BinArray[i] > whiteMax[0]) {\n                            whiteMax[0] = BinArray[i];\n                            whiteMax[1] = i;\n                        }\n                    }\n                }\n                if (blackMax[0] / whiteMax[0] > 1.55) {\n                    let tempArray = blackMax;\n\n                    blackMax = [tempArray, [0, 0],\n                        [0, 0]\n                    ];\n                    for (i = 0; i < BinArray.length; i++) {\n                        if (i % 2 === 0) {\n                            if (BinArray[i] > blackMax[1][0] && i !== blackMax[0][1]) {\n                                blackMax[1][0] = BinArray[i];\n                                prevPos = blackMax[1][1];\n                                blackMax[1][1] = i;\n                                i = prevPos - 1;\n                                continue;\n                            }\n                            if (BinArray[i] > blackMax[2][0] && i !== blackMax[0][1] && i !== blackMax[1][1]) {\n                                blackMax[2][0] = BinArray[i];\n                                blackMax[2][1] = i;\n                            }\n                        }\n                    }\n                    if (SecureCodabar) {\n                        wideAvrg = blackMax[0][0] + blackMax[1][0] + blackMax[2][0];\n                        wideAvrg /= 3;\n                        for (i = 0; i < blackMax.length; i++) {\n                            if (blackMax[i][0] / wideAvrg > upperTolerance || blackMax[i][0] / wideAvrg < lowerTolerance) return [];\n                        }\n                        narrowAvrg = 0;\n                        for (i = 0; i < BinArray.length; i++) {\n                            if (i === blackMax[0][1] || i === blackMax[1][1] || i === blackMax[2][1]) continue;\n                            narrowAvrg += BinArray[i];\n                        }\n                        narrowAvrg /= 4;\n                        for (i = 0; i < BinArray.length; i++) {\n                            if (i === blackMax[0][1] || i === blackMax[1][1] || i === blackMax[2][1]) continue;\n                            if (BinArray[i] / narrowAvrg > upperTolerance || BinArray[i] / narrowAvrg < lowerTolerance) return [];\n                        }\n                    }\n                    for (i = 0; i < BinArray.length; i++) {\n                        if (i === blackMax[0][1] || i === blackMax[1][1] || i === blackMax[2][1]) {\n                            tempBin.push(1);\n                        } else {\n                            tempBin.push(0);\n                        }\n                    }\n                } else {\n                    if (SecureCodabar) {\n                        wideAvrg = blackMax[0] + whiteMax[0];\n                        wideAvrg /= 2;\n                        if (blackMax[0] / wideAvrg > 1.5 || blackMax[0] / wideAvrg < 0.5) return [];\n                        if (whiteMax[0] / wideAvrg > 1.5 || whiteMax[0] / wideAvrg < 0.5) return [];\n                        narrowAvrg = 0;\n                        for (i = 0; i < BinArray.length; i++) {\n                            if (i === blackMax[1] || i === whiteMax[1]) continue;\n                            narrowAvrg += BinArray[i];\n                        }\n                        narrowAvrg /= 5;\n                        for (i = 0; i < BinArray.length; i++) {\n                            if (i === blackMax[1] || i === whiteMax[1]) continue;\n                            if (BinArray[i] / narrowAvrg > upperTolerance || BinArray[i] / narrowAvrg < lowerTolerance) return [];\n                        }\n                    }\n                    for (i = 0; i < BinArray.length; i++) {\n                        if (i === blackMax[1] || i === whiteMax[1]) {\n                            tempBin.push(1);\n                        } else {\n                            tempBin.push(0);\n                        }\n                    }\n                }\n            }\n            result.push(tempBin);\n            continue;\n        }\n        if (type === 4 || type === 5) {\n            max = [\n                [0, 0],\n                [0, 0]\n            ];\n            for (i = 0; i < BinArray.length; i++) {\n                if (!isFinite(BinArray[i])) return [];\n                if (BinArray[i] > max[0][0]) {\n                    max[0][0] = BinArray[i];\n                    prevPos = max[0][1];\n                    max[0][1] = i;\n                    i = prevPos - 1;\n                }\n                if (BinArray[i] > max[1][0] && i !== max[0][1]) {\n                    max[1][0] = BinArray[i];\n                    max[1][1] = i;\n                }\n            }\n            if (Secure2Of5) {\n                wideAvrg = max[0][0] + max[1][0];\n                wideAvrg /= 2;\n                if (max[0][0] / wideAvrg > 1.3 || max[0][0] / wideAvrg < 0.7) return [];\n                if (max[1][0] / wideAvrg > 1.3 || max[1][0] / wideAvrg < 0.7) return [];\n                narrowAvrg = 0;\n                for (i = 0; i < BinArray.length; i++) {\n                    if (i === max[0][1] || i === max[1][1]) continue;\n                    narrowAvrg += BinArray[i];\n                }\n                narrowAvrg /= 3;\n                for (i = 0; i < BinArray.length; i++) {\n                    if (i === max[0][1] || i === max[1][1]) continue;\n                    if (BinArray[i] / narrowAvrg > 1.3 || BinArray[i] / narrowAvrg < 0.7) return [];\n                }\n            }\n            for (i = 0; i < BinArray.length; i++) {\n                if (i === max[0][1] || i === max[1][1]) {\n                    tempBin.push(1);\n                    continue;\n                }\n                tempBin.push(0);\n            }\n            result.push(tempBin);\n            continue;\n        }\n        while (counter < totalBars) {\n            sum += BinArray[counter];\n            counter++;\n        }\n        if (type === 2) {\n\n            blackMax = [\n                [0, 0],\n                [0, 0]\n            ];\n            whiteMax = [0, 0];\n\n            for (j = 0; j < BinArray.length; j++) {\n                if (j % 2 === 0) {\n                    if (BinArray[j] > blackMax[0][0]) {\n                        blackMax[0][0] = BinArray[j];\n                        prevPos = blackMax[0][1];\n                        blackMax[0][1] = j;\n                        j = prevPos;\n                    }\n                    if (BinArray[j] > blackMax[1][0] && j !== blackMax[0][1]) {\n                        blackMax[1][0] = BinArray[j];\n                        blackMax[1][1] = j;\n                    }\n                } else {\n                    if (BinArray[j] > whiteMax[0]) {\n                        whiteMax[0] = BinArray[j];\n                        whiteMax[1] = j;\n                    }\n                }\n            }\n            if (whiteMax[0] / blackMax[0][0] > 1.5 && whiteMax[0] / blackMax[1][0] > 1.5) {\n                blackMax = [\n                    [0, 0],\n                    [0, 0]\n                ];\n                for (j = 0; j < BinArray.length; j++) {\n                    if (j % 2 !== 0) {\n                        if (BinArray[j] > blackMax[0][0] && j !== whiteMax[1]) {\n                            blackMax[0][0] = BinArray[j];\n                            prevPos = blackMax[0][1];\n                            blackMax[0][1] = j;\n                            j = prevPos;\n                        }\n                        if (BinArray[j] > blackMax[1][0] && j !== blackMax[0][1] && j !== whiteMax[1]) {\n                            blackMax[1][0] = BinArray[j];\n                            blackMax[1][1] = j;\n                        }\n                    }\n                }\n            }\n            wideAvrg = blackMax[0][0] + blackMax[1][0] + whiteMax[0];\n            wideAvrg /= 3;\n            if (blackMax[0][0] / wideAvrg > 1.6 || blackMax[0][0] / wideAvrg < 0.4) return [];\n            if (blackMax[1][0] / wideAvrg > 1.6 || blackMax[1][0] / wideAvrg < 0.4) return [];\n            if (whiteMax[0] / wideAvrg > 1.6 || whiteMax[0] / wideAvrg < 0.4) return [];\n            narrowAvrg = 0;\n            for (i = 0; i < BinArray.length; i++) {\n                if (i === blackMax[0][1] || i === blackMax[1][1] || i === whiteMax[1]) continue;\n                narrowAvrg += BinArray[i];\n            }\n            narrowAvrg /= 6;\n            for (i = 0; i < BinArray.length; i++) {\n                if (i === blackMax[0][1] || i === blackMax[1][1] || i === whiteMax[1]) continue;\n                if (BinArray[i] / narrowAvrg > 1.6 || BinArray[i] / narrowAvrg < 0.4) return [];\n            }\n            for (j = 0; j < BinArray.length; j++) {\n                if (j === blackMax[0][1] || j === blackMax[1][1] || j === whiteMax[1]) {\n                    tempBin.push(2);\n                } else {\n                    tempBin.push(1);\n                }\n            }\n            result.push(tempBin);\n            continue;\n        }\n        if (type === 3) {\n            max = [\n                [0, 0],\n                [0, 0],\n                [0, 0]\n            ];\n            for (j = 0; j < BinArray.length; j++) {\n                if (BinArray[j] > max[0][0]) {\n                    max[0][0] = BinArray[j];\n                    prevPos = max[0][1];\n                    max[0][1] = j;\n                    j = prevPos;\n                }\n                if (BinArray[j] > max[1][0] && j !== max[0][1]) {\n                    max[1][0] = BinArray[j];\n                    prevPos = max[1][1];\n                    max[1][1] = j;\n                    j = prevPos;\n                }\n                if (BinArray[j] > max[2][0] && j !== max[0][1] && j !== max[1][1]) {\n                    max[2][0] = BinArray[j];\n                    max[2][1] = j;\n                }\n            }\n            if (max[0][0] / max[1][0] >= 3) {\n                narrowAvrg = 0;\n                for (j = 0; j < BinArray.length; j++) {\n                    if (j === max[0][1]) continue;\n                    narrowAvrg += BinArray[j];\n                }\n                narrowAvrg /= 3;\n                for (j = 0; j < BinArray.length; j++) {\n                    if (j === max[0][1]) continue;\n                    if (BinArray[j] / narrowAvrg < 0.02 || BinArray[j] / narrowAvrg > 3) {\n                        return {\n                            data: [],\n                            correction: 0\n                        };\n                    }\n                }\n                if (max[0][0] / narrowAvrg < 2.2 || max[0][0] / narrowAvrg > 6) {\n                    return {\n                        data: [],\n                        correction: 0\n                    };\n                }\n                for (j = 0; j < BinArray.length; j++) {\n                    if (j === max[0][1]) {\n                        tempBin.push(4);\n                    } else {\n                        tempBin.push(1);\n                    }\n                }\n                result.push(tempBin);\n            } else if (max[0][0] / max[2][0] > 2) {\n                wideAvrg = max[0][0] + max[1][0];\n                wideAvrg /= 5;\n                if (max[0][0] / (wideAvrg * 3) < 0.02 || max[0][0] / (wideAvrg * 3) > 3) {\n                    return {\n                        data: [],\n                        correction: 0\n                    };\n                }\n                if (max[1][0] / (wideAvrg * 2) < 0.02 || max[1][0] / (wideAvrg * 2) > 3) {\n                    return {\n                        data: [],\n                        correction: 0\n                    };\n                }\n                narrowAvrg = 0;\n                for (j = 0; j < BinArray.length; j++) {\n                    if (j === max[0][1] || j === max[1][1]) continue;\n                    narrowAvrg += BinArray[j];\n                }\n                narrowAvrg /= 2;\n                for (j = 0; j < BinArray.length; j++) {\n                    if (j === max[0][1] || j === max[1][1]) continue;\n                    if (BinArray[j] / narrowAvrg < 0.02 || BinArray[j] / narrowAvrg > 3) {\n                        return {\n                            data: [],\n                            correction: 0\n                        };\n                    }\n                }\n                for (j = 0; j < BinArray.length; j++) {\n                    if (j === max[0][1]) {\n                        tempBin.push(3);\n                    } else if (j === max[1][1]) {\n                        tempBin.push(2);\n                    } else {\n                        tempBin.push(1);\n                    }\n                }\n                result.push(tempBin);\n            } else {\n                if (max[0][1] % 2 === max[1][1] % 2 && max[0][1] % 2 === max[2][1] % 2) {\n                    let modMem = max[0][1] % 2;\n\n                    max[2] = [0, 0];\n                    for (j = 0; j < BinArray.length; j++) {\n                        if (j % 2 === modMem) continue;\n                        if (BinArray[j] > max[2][0]) {\n                            max[2][0] = BinArray[j];\n                            max[2][1] = j;\n                        }\n                    }\n                }\n                wideAvrg = max[0][0] + max[1][0] + max[2][0];\n                wideAvrg /= 3;\n                for (j = 0; j < max.length; j++) {\n                    if (max[j][0] / wideAvrg < 0.02 || max[j][0] / wideAvrg > 3) {\n                        return {\n                            data: [],\n                            correction: 0\n                        };\n                    }\n                }\n                let narrow = 0;\n\n                for (j = 0; j < BinArray.length; j++) {\n                    if (j === max[0][1] || j === max[1][1] || j === max[2][1]) continue;\n                    narrow = BinArray[j];\n                }\n                if (wideAvrg / narrow < 0.02 || wideAvrg / narrow > 3) {\n                    return {\n                        data: [],\n                        correction: 0\n                    };\n                }\n                for (j = 0; j < BinArray.length; j++) {\n                    if (j === max[0][1] || j === max[1][1] || j === max[2][1]) {\n                        tempBin.push(2);\n                    } else {\n                        tempBin.push(1);\n                    }\n                }\n                result.push(tempBin);\n            }\n            for (j = 0; j < tempBin.length; j++) {\n                testData += Math.abs(tempBin[j] - (BinArray[j] / sum) * total);\n            }\n            continue;\n        }\n        counter = 0;\n        while (counter < totalBars) {\n            tempBin.push((BinArray[counter] / sum) * total);\n            counter++;\n        }\n        counter = 0;\n        while (counter < totalBars) {\n            tempBin[counter] = tempBin[counter] > maxLength ? maxLength : tempBin[counter];\n            tempBin[counter] = tempBin[counter] < 1 ? 1 : tempBin[counter];\n            tempBin[counter] = Math.round(tempBin[counter]);\n            counter++;\n        }\n        if (type === 3) {\n            let checking = 0;\n\n            for (let i = 0; i < tempBin.length; i++) {\n                checking += tempBin[i];\n            }\n            if (checking > 7) {\n                max = 0;\n                let hitIndex = 0;\n\n                for (let i = 0; i < tempBin.length; i++) {\n                    if (tempBin[i] > max) {\n                        max = tempBin[i];\n                        hitIndex = i;\n                    }\n                }\n                tempBin[hitIndex] = max - (checking - 7);\n            }\n        }\n        if (type === 3) {\n            for (i = 0; i < tempBin.length; i++) {\n                testData += Math.abs(tempBin[i] - (BinArray[i] / sum) * total);\n            }\n        }\n        result.push(tempBin);\n    }\n    if (type === 3) {\n        return {\n            data: result,\n            correction: testData\n        };\n    }\n    return result;\n\n}\n\nfunction CheckCode128(string) {\n    var checksum = string[string.length - 2].join('');\n\n    checksum = Code128Encoding.value.indexOf(checksum);\n    if (checksum === -1) return false;\n    let summarizer = Code128Encoding.value.indexOf(string[0].join(''));\n\n    if (summarizer === -1) return false;\n    let startChar = Code128Encoding[string[0].join('')];\n\n    if (typeof startChar === 'undefined') return false;\n    if (startChar !== 'A' && startChar !== 'B' && startChar !== 'C') return false;\n    for (let i = 1; i < (string.length - 2); i++) {\n        summarizer += Code128Encoding.value.indexOf(string[i].join('')) * i;\n        if (Code128Encoding.value.indexOf(string[i].join('')) === -1) return false;\n    }\n    return (summarizer % 103 === checksum);\n}\n\nfunction Decode2Of5(string) {\n    var result = '';\n\n    for (let i = 0; i < string.length; i++) {\n        if (TwoOfFiveEncoding.indexOf(string[i].join('')) === -1) return false;\n        result += TwoOfFiveEncoding.indexOf(string[i].join(''));\n    }\n    return result;\n}\n\nfunction DecodeCodaBar(string) {\n    var result = '';\n    var start = string[0].join('');\n    var end = string[string.length - 1].join('');\n\n    if (!(CodaBarEncoding[start] === 'A' || CodaBarEncoding[start] === 'B' ||\n        CodaBarEncoding[start] === 'C' || CodaBarEncoding[start] === 'D')) {\n        return false;\n    }\n\n    if (!(CodaBarEncoding[end] === 'A' || CodaBarEncoding[end] === 'B' ||\n        CodaBarEncoding[end] === 'C' || CodaBarEncoding[end] === 'D')) {\n        return false;\n    }\n\n    for (let i = 1; i < string.length - 1; i++) {\n        if (typeof CodaBarEncoding[string[i].join('')] === 'undefined') return false;\n        result += CodaBarEncoding[string[i].join('')];\n    }\n    return result;\n}\n\nfunction DecodeEAN13(string) {\n    if (string.length !== 12) return false;\n    let leftSide = string.slice(0, 6);\n    let trigger = false;\n    let rightSide = string.slice(6, string.length);\n\n    for (let i = 0; i < leftSide.length; i++) {\n        leftSide[i] = leftSide[i].join('');\n        if (leftSide[i].length !== 4) {\n            trigger = true;\n            break;\n        }\n    }\n    if (trigger) return false;\n    for (let i = 0; i < rightSide.length; i++) {\n        rightSide[i] = rightSide[i].join('');\n        if (rightSide[i].length !== 4) {\n            trigger = true;\n            break;\n        }\n    }\n    if (trigger) return false;\n    let decodeFormat = [];\n\n    for (let i = 0; i < leftSide.length; i++) {\n        if (typeof EAN13Encoding.L[leftSide[i]] !== 'undefined') {\n            decodeFormat.push('L');\n        } else if (typeof EAN13Encoding.G[leftSide[i]] !== 'undefined') {\n            decodeFormat.push('G');\n        } else {\n            trigger = true;\n            break;\n        }\n    }\n    if (trigger) return false;\n    let resultArray = [];\n\n    if (typeof EAN13Encoding.formats[decodeFormat.join('')] === 'undefined') return false;\n    resultArray.push(EAN13Encoding.formats[decodeFormat.join('')]);\n    for (let i = 0; i < leftSide.length; i++) {\n        if (typeof EAN13Encoding[decodeFormat[i]][leftSide[i]] === 'undefined') {\n            trigger = true;\n            break;\n        }\n        resultArray.push(EAN13Encoding[decodeFormat[i]][leftSide[i]]);\n    }\n    if (trigger) return false;\n    for (let i = 0; i < rightSide.length; i++) {\n        if (typeof EAN13Encoding.R[rightSide[i]] === 'undefined') {\n            trigger = true;\n            break;\n        }\n        resultArray.push(EAN13Encoding.R[rightSide[i]]);\n    }\n    if (trigger) return false;\n    let weight = 3;\n    let sum = 0;\n\n    for (let i = resultArray.length - 2; i >= 0; i--) {\n        sum += resultArray[i] * weight;\n        if (weight === 3) {\n            weight = 1;\n        } else {\n            weight = 3;\n        }\n    }\n    sum = (10 - sum % 10) % 10;\n    if (resultArray[resultArray.length - 1] === sum) {\n        return resultArray.join('');\n    }\n    return false;\n\n}\n\nfunction CheckCode93(string) {\n    var checkOne = string[string.length - 3].join('');\n    var checkTwo = string[string.length - 2].join('');\n    var failSafe = true;\n\n    if (typeof Code93Encoding[checkOne] === 'undefined') return false;\n    if (typeof Code93Encoding[checkTwo] === 'undefined') return false;\n    let checkSum = Code93Encoding[checkOne].value;\n    let weight = 1;\n    let sum = 0;\n\n    for (let i = string.length - 4; i > 0; i--) {\n        failSafe = typeof Code93Encoding[string[i].join('')] === 'undefined' ? false : failSafe;\n        if (!failSafe) break;\n        sum += Code93Encoding[string[i].join('')].value * weight;\n        weight++;\n        if (weight > 20) weight = 1;\n    }\n    let firstCheck = sum % 47;\n    let firstBool = firstCheck === checkSum;\n\n    if (!firstBool) return false;\n    if (!failSafe) return false;\n    sum = firstCheck;\n    weight = 2;\n    checkSum = Code93Encoding[checkTwo].value;\n    for (let i = string.length - 4; i > 0; i--) {\n        failSafe = typeof Code93Encoding[string[i].join('')] === 'undefined' ? false : failSafe;\n        if (!failSafe) break;\n        sum += Code93Encoding[string[i].join('')].value * weight;\n        weight++;\n        if (weight > 15) weight = 1;\n    }\n    let secondCheck = sum % 47;\n    let secondBool = secondCheck === checkSum;\n\n    return secondBool && firstBool;\n}\n\nfunction CheckCode39(string) {\n    var trigger = true;\n\n    if (typeof Code39Encoding[string[0].join('')] === 'undefined') return false;\n    if (Code39Encoding[string[0].join('')].character !== '*') return false;\n    if (typeof Code39Encoding[string[string.length - 1].join('')] === 'undefined') return false;\n    if (Code39Encoding[string[string.length - 1].join('')].character !== '*') return false;\n\n    for (let i = 1; i < string.length - 1; i++) {\n        if (typeof Code39Encoding[string[i].join('')] === 'undefined') {\n            trigger = false;\n            break;\n        }\n    }\n    return trigger;\n}\n\nfunction DecodeCode39(string) {\n    var resultString = '';\n    var special = false;\n    var character = '';\n    var specialchar = '';\n    var i;\n\n    for (i = 1; i < string.length - 1; i++) {\n        character = Code39Encoding[string[i].join('')].character;\n        if (character === '$' || character === '/' || character === '+' || character === '%') {\n            // if next character exists => this a special character\n            if (i + 1 < string.length - 1) {\n                special = true;\n                specialchar = character;\n                continue;\n            }\n        }\n        if (special) {\n            if (typeof ExtendedEncoding[specialchar + character] === 'undefined') {\n            } else {\n                resultString += ExtendedEncoding[specialchar + character];\n            }\n            special = false;\n            continue;\n        }\n        resultString += character;\n    }\n    return resultString;\n}\n\nfunction DecodeCode93(string) {\n    var resultString = '';\n    var special = false;\n    var character = '';\n    var specialchar = '';\n\n    for (let i = 1; i < string.length - 3; i++) {\n        character = Code93Encoding[string[i].join('')].character;\n        if (character === '($)' || character === '(/)' || character === '(+)' || character === '(%)') {\n            special = true;\n            specialchar = character[1];\n            continue;\n        }\n        if (special) {\n            if (typeof ExtendedEncoding[specialchar + character] === 'undefined') {\n            } else {\n                resultString += ExtendedEncoding[specialchar + character];\n            }\n            special = false;\n            continue;\n        }\n        resultString += character;\n    }\n    return resultString;\n}\n\nfunction DecodeCode128(string) {\n    var set = Code128Encoding[string[0].join('')];\n    var symbol;\n    var Code128Format = 'Code128';\n    var resultString = '';\n    var i;\n\n    for (i = 1; i < (string.length - 2); i++) {\n        symbol = Code128Encoding[string[i].join('')][set];\n        switch (symbol) {\n            case 'FNC1':\n                if (i === 1) Code128Format = 'GS1-128';\n                break;\n            case 'FNC2':\n            case 'FNC3':\n            case 'FNC4':\n                break;\n            case 'SHIFT_B':\n                i++;\n                resultString += Code128Encoding[string[i].join('')].B;\n                break;\n            case 'SHIFT_A':\n                i++;\n                resultString += Code128Encoding[string[i].join('')].A;\n                break;\n            case 'Code_A':\n                set = 'A';\n                break;\n            case 'Code_B':\n                set = 'B';\n                break;\n            case 'Code_C':\n                set = 'C';\n                break;\n            default:\n                resultString += symbol;\n        }\n    }\n    return {\n        string: resultString,\n        format: Code128Format\n    };\n}\n\nfunction BinaryString(img, type) {\n    let binaryString = [];\n    let format;\n    let tempString;\n    let corrections;\n    let container;\n\n    // things that don't change\n    const splitImageLength = img.length - Image.width * 4;\n    const imageWidthX4 = Image.width * 4;\n\n    for (let j = 0; j < splitImageLength; j += imageWidthX4) {\n        let i = 0;\n        let SlicedArray = img.subarray(j, j + imageWidthX4);\n\n        // could use SlicedArray.length but we have the numbers,\n        // so don't burn millis (15ms gain)\n        const slicedArrayLength = (j + imageWidthX4) - j;\n\n        while (SlicedArray[i] === 255) {\n            i += 4;\n        }\n\n        while (i < slicedArrayLength) {\n            let count = 0;\n\n            container = SlicedArray[i];\n\n            while (i < slicedArrayLength) {\n                if (SlicedArray[i] !== container) {\n                    break;\n                }\n                count++;\n                i += 4;\n            }\n            binaryString.push(count);\n        }\n\n        if (binaryString.length > 2 && binaryString[0] <= binaryString[1] / 10) {\n            binaryString.splice(0, 2);\n        }\n        let binaryHolder = binaryString.slice();\n        let success = false;\n\n        const FormatPriorityLength = FormatPriority.length;\n\n        for (let i = 0; i < FormatPriorityLength; i++) {\n            binaryString = binaryHolder.slice();\n            let first;\n            let second;\n\n            format = FormatPriority[i];\n\n            binaryString = BinaryConfiguration(binaryString, format);\n            if (format === '2Of5' || format === 'Inter2Of5') {\n                first = binaryString.splice(0, 1)[0];\n                second = binaryString.splice(binaryString.length - 1, 1)[0];\n            }\n            let binTemp = Distribution(binaryString, format);\n\n            if (format === 'EAN-13') {\n                binaryString = binTemp.data;\n                corrections = binTemp.correction;\n            } else {\n                binaryString = binTemp;\n            }\n            if (typeof binaryString === 'undefined') continue;\n\n            if (binaryString.length > 4 || (format === 'Code39' && binaryString.length > 2)) {\n                if (format === 'Code128') {\n                    if (CheckCode128(binaryString)) {\n                        binaryString = DecodeCode128(binaryString);\n                        success = true;\n                    }\n                } else if (format === 'Code93') {\n                    if (CheckCode93(binaryString)) {\n                        binaryString = DecodeCode93(binaryString);\n                        success = true;\n                    }\n                } else if (format === 'Code39') {\n                    if (CheckCode39(binaryString)) {\n                        binaryString = DecodeCode39(binaryString);\n                        success = true;\n                    }\n                } else if (format === 'EAN-13') {\n                    tempString = DecodeEAN13(binaryString);\n                    if (tempString) {\n                        if (tempString.length === 13) {\n                            binaryString = tempString;\n                            success = true;\n                        }\n                    }\n                } else if (format === '2Of5' || format === 'Inter2Of5') {\n                    if (format === '2Of5') {\n                        if (typeof first !== 'undefined') {\n                            if (!TwoOfFiveStartEnd(first, true)) continue;\n                        }\n                        if (typeof second !== 'undefined') {\n                            if (!TwoOfFiveStartEnd(second, false)) continue;\n                        }\n                    }\n                    if (format === 'Inter2Of5') {\n                        if (typeof first !== 'undefined') {\n                            if (!CheckInterleaved(first, true)) continue;\n                        }\n                        if (typeof second !== 'undefined') {\n                            if (!CheckInterleaved(second, false)) continue;\n                        }\n                    }\n                    tempString = Decode2Of5(binaryString);\n                    if (tempString) {\n                        binaryString = tempString;\n                        success = true;\n                    }\n                } else if (format === 'Codabar') {\n                    tempString = DecodeCodaBar(binaryString);\n                    if (tempString) {\n                        binaryString = tempString;\n                        success = true;\n                    }\n                }\n            }\n            if (success) {\n                if (format === 'Inter2Of5') format = 'Interleaved 2 of 5';\n                if (format === '2Of5') format = 'Standard 2 of 5';\n                break;\n            }\n        }\n        if (success) break;\n    }\n    if (format === 'Code128') {\n        if (typeof binaryString.string === 'string') {\n            return binaryString;\n        }\n        return {\n            string: false\n        };\n\n    }\n    if (typeof binaryString === 'string') {\n        if (format === 'EAN-13') {\n            return {\n                string: binaryString,\n                format: format,\n                correction: corrections\n            };\n        }\n        return {\n            string: binaryString,\n            format: format\n        };\n\n    }\n    return {\n        string: false\n    };\n\n}\n\nfunction Main() {\n    var allResults = [];\n    var tempObj;\n    var tempData;\n    var hist;\n    var val;\n    var thresh;\n    var start;\n    var end;\n    var z, i;\n\n    ImgProcessing();\n\n    for (z = 0; z < allTables.length; z++) {\n        Image = allTables[z];\n        let scaled = ScaleHeight(30);\n        let variationData;\n        let incrmt = 0;\n        let format = '';\n        let eanStatistics = {};\n        let eanOrder = [];\n        let Selection = false;\n\n        do {\n            tempData = scaled.subarray(incrmt, incrmt + Image.width * 4);\n            hist = [];\n            for (i = 0; i < 256; i++) {\n                hist[i] = 0;\n            }\n            for (i = 0; i < tempData.length; i += 4) {\n                val = Math.round((tempData[i] + tempData[i + 1] + tempData[i + 2]) / 3);\n                hist[val] = hist[val] + 1;\n            }\n            thresh = otsu(hist, tempData.length / 4);\n            start = thresh < 41 ? 1 : thresh - 40;\n            end = thresh > 254 - 40 ? 254 : thresh + 40;\n            variationData = yStraighten(tempData, start, end);\n            Selection = BinaryString(variationData);\n            if (Selection.string) {\n                format = Selection.format;\n                tempObj = Selection;\n                Selection = Selection.string;\n                if (format === 'EAN-13') {\n                    if (typeof eanStatistics[Selection] === 'undefined') {\n                        eanStatistics[Selection] = {\n                            count: 1,\n                            correction: tempObj.correction\n                        };\n                        eanOrder.push(Selection);\n                    } else {\n                        eanStatistics[Selection].count = eanStatistics[Selection].count + 1;\n                        eanStatistics[Selection].correction = eanStatistics[Selection].correction + tempObj.correction;\n                    }\n                    Selection = false;\n                }\n            } else {\n                Selection = false;\n            }\n            incrmt += Image.width * 4;\n        } while (!Selection && incrmt < scaled.length);\n        if (Selection && format !== 'EAN-13') {\n            allResults.push({\n                Format: format,\n                Value: Selection,\n                bBox: Locations[z],\n            });\n        }\n        if (format === 'EAN-13') Selection = false;\n        if (!Selection) {\n            EnlargeTable(4, 2);\n            incrmt = 0;\n            scaled = ScaleHeight(20);\n            do {\n                tempData = scaled.subarray(incrmt, incrmt + Image.width * 4);\n                hist = [];\n                for (i = 0; i < 256; i++) {\n                    hist[i] = 0;\n                }\n                for (i = 0; i < tempData.length; i += 4) {\n                    val = Math.round((tempData[i] + tempData[i + 1] + tempData[i + 2]) / 3);\n                    hist[val] = hist[val] + 1;\n                }\n                thresh = otsu(hist, tempData.length / 4);\n                start = thresh < 40 ? 0 : thresh - 40;\n                end = thresh > 255 - 40 ? 255 : thresh + 40;\n                variationData = yStraighten(tempData, start, end);\n                Selection = BinaryString(variationData);\n                if (Selection.string) {\n                    format = Selection.format;\n                    tempObj = Selection;\n                    Selection = Selection.string;\n                    if (format === 'EAN-13') {\n                        if (typeof eanStatistics[Selection] === 'undefined') {\n                            eanStatistics[Selection] = {\n                                count: 1,\n                                correction: tempObj.correction\n                            };\n                            eanOrder.push(Selection);\n                        } else {\n                            eanStatistics[Selection].count = eanStatistics[Selection].count + 1;\n                            eanStatistics[Selection].correction = eanStatistics[Selection].correction + tempObj.correction;\n                        }\n                        Selection = false;\n                    }\n                } else {\n                    Selection = false;\n                }\n                incrmt += Image.width * 4;\n            } while (!Selection && incrmt < scaled.length);\n\n            if (format === 'EAN-13') {\n                let points = {};\n                let key;\n\n                for (key in eanStatistics) {\n                    eanStatistics[key].correction = eanStatistics[key].correction / eanStatistics[key].count;\n                    let pointTemp = eanStatistics[key].correction;\n\n                    pointTemp -= eanStatistics[key].count;\n                    pointTemp += eanOrder.indexOf(key);\n                    points[key] = pointTemp;\n                }\n\n                let minPoints = Number.POSITIVE_INFINITY;\n                let tempString = '';\n\n                for (let point in points) {\n                    if (points[point] < minPoints) {\n                        minPoints = points[point];\n                        tempString = key;\n                    }\n                }\n                if (minPoints < 11) {\n                    Selection = tempString;\n                } else {\n                    Selection = false;\n                }\n            }\n\n            if (Selection) {\n                allResults.push({\n                    Format: format,\n                    Value: Selection,\n                    bBox: Locations[z],\n                });\n            }\n        }\n        if (allResults.length > 0 && !Multiple) break;\n    }\n    return allResults;\n}\n\n\nexport {\n    CreateTable,\n    CreateScanTable,\n    CreateImageData,\n    Scale,\n    Rotate,\n    ScanImage,\n    Image,\n    FormatPriority,\n    Multiple,\n    availableFormats,\n    Locations,\n    Main,\n    allTables\n};","import jsQR from 'jsqr-es6/dist/jsQR.js';\nimport {\n    CreateTable,\n    CreateScanTable,\n    Scale,\n    Rotate,\n    ScanImage,\n    Image,\n    FormatPriority,\n    Multiple,\n    availableFormats,\n    Locations,\n    Main\n} from \"./Decoder1D\";\n\n\n/* eslint-disable no-restricted-globals */\n//import {BrowserMultiFormatReader} from \"@zxing/library/es2015/index.js\";\n\nlet inversionAttempts = 'dontInvert';\nlet grayscaleWeights = {\n    // weights for quick luma integer approximation (https://en.wikipedia.org/wiki/YUV#Full_swing_for_BT.601)\n    red: 77,\n    green: 150,\n    blue: 29,\n    useIntegerApproximation: true,\n};\n\n\nself.onmessage = event => {\n    const type = event['data']['type'];\n    const data = event['data']['data'];\n\n    switch (type) {\n        case 'decode':\n            decode(data);\n            break;\n        case 'grayscaleWeights':\n            setGrayscaleWeights(data);\n            break;\n        case 'inversionMode':\n            setInversionMode(data);\n            break;\n        case 'close':\n            // close after earlier messages in the event loop finished processing\n            self.close();\n            break;\n    }\n};\n\nfunction decode(data) {\n    const rgbaData = data['data'];\n    const width = data['width'];\n    const height = data['height'];\n    const worker = self;\n\n    const resultTemp = jsQR(rgbaData, width, height, {\n        inversionAttempts: inversionAttempts,\n        greyScaleWeights: grayscaleWeights,\n    });\n\n    if (resultTemp) {\n        worker.postMessage({\n            type: 'qrResult',\n            data: resultTemp ? resultTemp : null,\n        });\n    } else {\n        let width;\n        let decodeFormats;\n\n        ScanImage = {\n            data: new Uint8ClampedArray(data.scan),\n            width: data.scanWidth,\n            height: data.scanHeight\n        };\n        switch (data.rotation) {\n            case 8:\n                ScanImage.data = Rotate(ScanImage.data, ScanImage.width, ScanImage.height, -90);\n                width = data.scanWidth;\n                ScanImage.width = ScanImage.height;\n                ScanImage.height = width;\n                break;\n            case 6:\n                ScanImage.data = Rotate(ScanImage.data, ScanImage.width, ScanImage.height, 90);\n                width = data.scanWidth;\n                ScanImage.width = ScanImage.height;\n                ScanImage.height = width;\n                break;\n            case 3:\n                ScanImage.data = Rotate(ScanImage.data, ScanImage.width, ScanImage.height, 180);\n        }\n        Image = {\n            data: Scale(ScanImage.data, ScanImage.width, ScanImage.height),\n            width: ScanImage.width / 2,\n            height: ScanImage.height / 2\n        };\n        if (data.postOrientation) {\n            postMessage({\n                result: Image,\n                success: 'orientationData'\n            });\n        }\n\n        FormatPriority = [];\n        Multiple = true;\n\n        if (typeof data.multiple !== 'undefined') {\n            Multiple = data.multiple;\n        }\n\n        if (typeof data.decodeFormats !== 'undefined') {\n            decodeFormats = data.decodeFormats;\n        } else {\n            decodeFormats = availableFormats;\n        }\n\n        for (let i = 0; i < decodeFormats.length; i++) {\n            FormatPriority.push(decodeFormats[i]);\n        }\n\n        Locations = [];\n\n        Promise.all([CreateTable(), CreateScanTable()]).then(() => {\n\n            let FinalResult = Main();\n\n            if (FinalResult.length > 0) {\n                postMessage({\n                    id: data.id,\n                    result: FinalResult,\n                    success: true,\n                    type: 'qrResult',\n                    data: FinalResult,\n                });\n            } else {\n                postMessage({\n                    id: data.id,\n                    result: FinalResult,\n                    success: false,\n                    type: 'qrResult',\n                    data: null,\n                });\n            }\n        });\n    }\n\n}\n\nfunction setGrayscaleWeights(data) {\n    // update grayscaleWeights in a closure compiler compatible fashion\n    grayscaleWeights.red = data['red'];\n    grayscaleWeights.green = data['green'];\n    grayscaleWeights.blue = data['blue'];\n    grayscaleWeights.useIntegerApproximation = data['useIntegerApproximation'];\n}\n\nfunction setInversionMode(inversionMode) {\n    switch (inversionMode) {\n        case 'original':\n            inversionAttempts = 'dontInvert';\n            break;\n        case 'invert':\n            inversionAttempts = 'onlyInvert';\n            break;\n        case 'both':\n            inversionAttempts = 'attemptBoth';\n            break;\n        default:\n            throw new Error('Invalid inversion mode');\n    }\n}\n"],"sourceRoot":""}